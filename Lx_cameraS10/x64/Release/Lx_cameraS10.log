     0>在  处重新分配属性: $(MSBuildExtensionsPath)=“E:\vs\MSBuild”(先前值:“C:\Program Files (x86)\MSBuild”)
       在  处重新分配属性: $(MSBuildExtensionsPath32)=“E:\vs\MSBuild”(先前值:“C:\Program Files (x86)\MSBuild”)
       值为“C:\Users\24583\AppData\Local\QtMsBuild”的属性“QtMsBuild”从环境中展开。
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 E:\vs\MSBuild;$(MSBuildProgramFiles32)\MSBuild
       尝试使用扩展路径 E:\vs\MSBuild 导入 E:\vs\MSBuild\$(MSBuildToolsVersion)\Microsoft.Common.props
       在 E:\vs\MSBuild\Current\Microsoft.Common.props (60,5) 处重新分配属性: $(MSBuildProjectExtensionsPath)=“E:\Lx_cameraS10\Lx_cameraS10\obj\”(先前值:“obj\”)
       值为“C:\Users\24583\AppData\Local\Microsoft\MSBuild”的属性“MSBuildUserExtensionsPath”从环境中展开。
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 E:\vs\MSBuild;$(MSBuildProgramFiles32)\MSBuild
       尝试使用扩展路径 E:\vs\MSBuild 导入 E:\vs\MSBuild\$(MSBuildToolsVersion)\Imports\Microsoft.Common.props\ImportBefore\*
       值为“17.0”的属性“VisualStudioVersion”从环境中展开。
       “Configuration”属性是全局属性，不能修改。
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 E:\vs\MSBuild;$(MSBuildProgramFiles32)\MSBuild
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 E:\vs\MSBuild;$(MSBuildProgramFiles32)\MSBuild
       “Configuration”属性是全局属性，不能修改。
       “LangID”属性是全局属性，不能修改。
       “SolutionDir”属性是全局属性，不能修改。
       值为“C:\Users\24583\AppData\Local”的属性“LOCALAPPDATA”从环境中展开。
       在 E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj (31,5) 处重新分配属性: $(WholeProgramOptimization)=“true”(先前值:“false”)
       在 E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj (32,5) 处重新分配属性: $(CharacterSet)=“Unicode”(先前值:“NotSet”)
       值为“AMD64”的属性“PROCESSOR_ARCHITECTURE”从环境中展开。
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.WindowsSDK.props (18,5) 处重新分配属性: $(WindowsSdkDir_10)=“E:\Windows Kits\10\”(先前值:“”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.WindowsSDK.props (46,5) 处重新分配属性: $(NETFXSDK_Version)=“4.8”(先前值:“4.8.1”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.WindowsSDK.props (51,5) 处重新分配属性: $(NETFXKitsDir)=“C:\Program Files (x86)\Windows Kits\NETFXSDK\4.8\”(先前值:“”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.WindowsSDK.props (54,5) 处重新分配属性: $(NETFXSDKDir)=“C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\”(先前值:“”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.WindowsSDK.props (209,5) 处重新分配属性: $(WindowsSDK_ExecutablePath_x86)=“E:\Windows Kits\10\bin\10.0.19041.0\x86;;C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools”(先前值:“E:\Windows Kits\10\bin\10.0.19041.0\x86;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.WindowsSDK.props (210,5) 处重新分配属性: $(WindowsSDK_ExecutablePath_x64)=“E:\Windows Kits\10\bin\10.0.19041.0\x64;;C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\x64”(先前值:“E:\Windows Kits\10\bin\10.0.19041.0\x64;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Common.props (28,5) 处重新分配属性: $(TargetExt)=“.exe”(先前值:“”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Common.props (88,5) 处重新分配属性: $(VC_ExecutablePath_Loc)=“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Common.props (89,5) 处重新分配属性: $(VC_ExecutablePath_Loc)=“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Common.props (90,5) 处重新分配属性: $(VC_ExecutablePath_Loc)=“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;;”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Common.props (91,5) 处重新分配属性: $(VC_ExecutablePath_Loc)=“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;;;”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Common.props (92,5) 处重新分配属性: $(VC_ExecutablePath_Loc)=“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;;;;”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;;;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Common.props (93,5) 处重新分配属性: $(VC_ExecutablePath_Loc)=“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;;;;;”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;;;;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Common.props (94,5) 处重新分配属性: $(VC_ExecutablePath_Loc)=“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostArm64\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;;;;;;”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;;;;;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Common.props (95,5) 处重新分配属性: $(VC_ExecutablePath_Loc)=“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostArm64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostArm64\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;;;;;;;”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostArm64\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;;;;;;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Common.props (96,5) 处重新分配属性: $(VC_ExecutablePath_Loc)=“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostArm64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostArm64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostArm64\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;;;;;;;;”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostArm64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostArm64\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;;;;;;;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Common.props (97,5) 处重新分配属性: $(VC_ExecutablePath_Loc)=“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostArm64\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostArm64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostArm64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostArm64\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;;;;;;;;;”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostArm64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostArm64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostArm64\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x86\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\arm\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\2052;E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x86\2052;;;;;;;;;;;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Common.props (124,5) 处重新分配属性: $(MSBuild_ExecutablePath)=“E:\vs\MSBuild\Current\Bin\amd64;C:\Windows\Microsoft.NET\Framework64\v4.0.30319\;C:\Windows\Microsoft.NET\Framework\v4.0.30319\;E:\vs\MSBuild\Current\Bin;C:\Windows\Microsoft.NET\Framework\v4.0.30319\”(先前值:“E:\vs\MSBuild\Current\Bin;C:\Windows\Microsoft.NET\Framework\v4.0.30319\”)
       值为“LAPTOP-44JLKHLH”的属性“COMPUTERNAME”从环境中展开。
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Common.props (154,5) 处重新分配属性: $(RemoteDebuggerDeployCppRuntime)=“true”(先前值:“false”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Common.props (214,5) 处重新分配属性: $(MultiProcMaxCount)=“0”(先前值:“”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CodeAnalysis.Extensions.props (21,5) 处重新分配属性: $(EspXtensions)=“EnumIndex.dll;CppCoreCheck.dll;”(先前值:“CppCoreCheck.dll;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CodeAnalysis.Extensions.props (24,5) 处重新分配属性: $(EspXtensions)=“HResultCheck.dll;EnumIndex.dll;CppCoreCheck.dll;”(先前值:“EnumIndex.dll;CppCoreCheck.dll;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CodeAnalysis.Extensions.props (27,5) 处重新分配属性: $(EspXtensions)=“VariantClear.dll;HResultCheck.dll;EnumIndex.dll;CppCoreCheck.dll;”(先前值:“HResultCheck.dll;EnumIndex.dll;CppCoreCheck.dll;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CodeAnalysis.Extensions.props (31,5) 处重新分配属性: $(ConcurrencyCheckPath)=“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\ConcurrencyCheck.dll”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX86\x86\ConcurrencyCheck.dll”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CodeAnalysis.Extensions.props (34,5) 处重新分配属性: $(EspXtensions)=“ConcurrencyCheck.dll;VariantClear.dll;HResultCheck.dll;EnumIndex.dll;CppCoreCheck.dll;”(先前值:“VariantClear.dll;HResultCheck.dll;EnumIndex.dll;CppCoreCheck.dll;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.UnitTest.props (17,5) 处重新分配属性: $(VC_IncludePath)=“E:\vs\VC\Tools\MSVC\14.41.34120\include;;E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\include;;E:\vs\VC\Auxiliary\VS\include;;E:\Windows Kits\10\Include\10.0.19041.0\ucrt;;;E:\vs\VC\Auxiliary\VS\UnitTest\include”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\include;;E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\include;;E:\vs\VC\Auxiliary\VS\include;;E:\Windows Kits\10\Include\10.0.19041.0\ucrt;;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.UnitTest.props (19,5) 处重新分配属性: $(VC_LibraryPath_x86)=“E:\vs\VC\Tools\MSVC\14.41.34120\lib\x86;;E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x86;;E:\vs\VC\Auxiliary\VS\lib\x86;;E:\Windows Kits\10\lib\10.0.19041.0\ucrt\x86;;;E:\vs\VC\Auxiliary\VS\UnitTest\lib”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\lib\x86;;E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x86;;E:\vs\VC\Auxiliary\VS\lib\x86;;E:\Windows Kits\10\lib\10.0.19041.0\ucrt\x86;;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.UnitTest.props (20,5) 处重新分配属性: $(VC_LibraryPath_x64)=“E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Auxiliary\VS\lib\x64;;E:\Windows Kits\10\lib\10.0.19041.0\ucrt\x64;;;E:\vs\VC\Auxiliary\VS\UnitTest\lib”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Auxiliary\VS\lib\x64;;E:\Windows Kits\10\lib\10.0.19041.0\ucrt\x64;;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.UnitTest.props (21,5) 处重新分配属性: $(VC_LibraryPath_ARM)=“E:\vs\VC\Tools\MSVC\14.41.34120\lib\ARM;;E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\ARM;;E:\vs\VC\Auxiliary\VS\lib\ARM;;E:\Windows Kits\10\lib\10.0.19041.0\ucrt\arm;;;E:\vs\VC\Auxiliary\VS\UnitTest\lib”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\lib\ARM;;E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\ARM;;E:\vs\VC\Auxiliary\VS\lib\ARM;;E:\Windows Kits\10\lib\10.0.19041.0\ucrt\arm;;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.UnitTest.props (22,5) 处重新分配属性: $(VC_LibraryPath_ARM64)=“E:\vs\VC\Tools\MSVC\14.41.34120\lib\ARM64;;E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\ARM64;;;E:\Windows Kits\10\lib\10.0.19041.0\ucrt\arm64;;;E:\vs\VC\Auxiliary\VS\UnitTest\lib”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\lib\ARM64;;E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\ARM64;;;E:\Windows Kits\10\lib\10.0.19041.0\ucrt\arm64;;”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.unicodesupport.props (15,5) 处重新分配属性: $(_PropertySheetDisplayName)=“Unicode Support”(先前值:“Core Windows Libraries”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Application.props (15,5) 处重新分配属性: $(_PropertySheetDisplayName)=“Application”(先前值:“Unicode Support”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.WholeProgramOptimization.props (15,5) 处重新分配属性: $(_PropertySheetDisplayName)=“Whole Program Optimization”(先前值:“Application”)
       值为“C:\Python312\Scripts\;C:\Python312\;D:\VRM\vma\bin\;E:\app\24583\product\11.2.0\dbhome_2\bin;E:\orc\data\dbhomeXE\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;E;\Vivo互传\EasyShare\x64\;C;\strawberry\c\bin;C:\strawberry\perl\bin;E;\Vivo互传\EasyShare\x64\;%;PENNI2_REDIST64%;\Rational rose\ROSEanzhuang\common;F:\R\R-4.3.3\bin;C:\Strawberry\c\bin;C:\Strawberry\perl\site\bin;E:\Vivo互传\EasyShare\x86\;\;ivo互传\EasyShare\x64\;\;ianrushi\proteus\yagarto-20121222\bin;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\ProgramData\chocolatey\bin;E:\中软国际大四开学课设\node\;D:\cmake\;make-3.29.7-windows-x86_64\bin;E:\opencv-4.9.0-windows\opencv\build\x64\vc16\bin;D:\ifm3D\ifm3d 1.5.3\bin;E:\Lua\5.1;E:\Lua\5.1\clibs;E:\PCL 1.14.1\bin;E:\PCL 1.14.1\3rdParty\VTK\bin;E:\PCL 1.14.1\3rdParty\FLANN\bin;E:\PCL 1.14.1\3rdParty\Qhull\bin;E:\PCL 1.14.1\3rdParty\OpenNI2\Tools;F:\QT\QT\5.13.1\msvc2017_64\bin;C:\Users\24583\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Windows PowerShell;F:\opencv3.0\opencv\build\x86\vc12\bin;C:\Program Files\GitHub CLI\;F:\Git\Git\cmd;C:\Users\24583\.cargo\bin;D:\anaconda;D:\anaconda\Library\mingw-w64\bin;D:\anaconda\Library\usr\bin;D:\anaconda\Library\bin;D:\anaconda\Scripts;C:\Program Files\MySQL\MySQL Shell 8.1\bin\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\24583\AppData\Local\Microsoft\WindowsApps;E:\java\IntelliJ IDEA Community Edition 2022.2\bin;E:\PC\PyCharm Community Edition 2022.2\bin;D:\MySQL\MySQL Server 5.7\bin;C:\Users\24583\AppData\Roaming\npm;D:\cmake\cmake-3.29.7-windows-x86_64\bin;C:\Users\24583\.dotnet\tools”的属性“Path”从环境中展开。
       值为“C:\Windows”的属性“SystemRoot”从环境中展开。
       在 C:\Users\24583\AppData\Local\QtMsBuild\qt_defaults.props (32,5) 处重新分配属性: $(QtVSToolsVersion)=“3.3.0.13”(先前值:“3.3.0.13 
       ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\qt_defaults.props (43,5) 处重新分配属性: $(QtVsProjectVersion)=“304”(先前值:“0”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\qt_defaults.props (145,5) 处重新分配属性: $(SubFolder)=“”(先前值:“C:\Users\24583\AppData\Local\QtMsBuild\deploy;C:\Users\24583\AppData\Local\QtMsBuild\idc;C:\Users\24583\AppData\Local\QtMsBuild\moc;C:\Users\24583\AppData\Local\QtMsBuild\qml;C:\Users\24583\AppData\Local\QtMsBuild\rcc;C:\Users\24583\AppData\Local\QtMsBuild\repc;C:\Users\24583\AppData\Local\QtMsBuild\translation;C:\Users\24583\AppData\Local\QtMsBuild\uic”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\qt_defaults.props (146,5) 处重新分配属性: $(SubFolderImports)=“”(先前值:“
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qt_import.props;C:\Users\24583\AppData\Local\QtMsBuild\idc\qt_import.props;C:\Users\24583\AppData\Local\QtMsBuild\moc\qt_import.props;C:\Users\24583\AppData\Local\QtMsBuild\qml\qt_import.props;C:\Users\24583\AppData\Local\QtMsBuild\rcc\qt_import.props;C:\Users\24583\AppData\Local\QtMsBuild\repc\qt_import.props;C:\Users\24583\AppData\Local\QtMsBuild\translation\qt_import.props;C:\Users\24583\AppData\Local\QtMsBuild\uic\qt_import.props
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\idc\qt_import.props (10,5) 处重新分配属性: $(QtMsBuildProps)=“
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.props
           ”(先前值:“
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.props
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\idc\qt_import.props (14,5) 处重新分配属性: $(QtMsBuildTargets)=“
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.targets
           ”(先前值:“
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.targets
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\moc\qt_import.props (14,5) 处重新分配属性: $(QtMsBuildProps)=“
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.props
           ”(先前值:“
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.props
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\moc\qt_import.props (18,5) 处重新分配属性: $(QtMsBuildTargets)=“
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.targets
           ”(先前值:“
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.targets
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\rcc\qt_import.props (14,5) 处重新分配属性: $(QtMsBuildProps)=“
             
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.props
           ”(先前值:“
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.props
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\rcc\qt_import.props (18,5) 处重新分配属性: $(QtMsBuildTargets)=“
             
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets
           ”(先前值:“
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.targets
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\repc\qt_import.props (14,5) 处重新分配属性: $(QtMsBuildProps)=“
             
             
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\repc\qtrepc.props
           ”(先前值:“
             
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.props
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\repc\qt_import.props (18,5) 处重新分配属性: $(QtMsBuildTargets)=“
             
             
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\repc\qtrepc.targets
           ”(先前值:“
             
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\translation\qt_import.props (14,5) 处重新分配属性: $(QtMsBuildProps)=“
             
             
             
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\repc\qtrepc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\translation\qttranslation.props
           ”(先前值:“
             
             
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\repc\qtrepc.props
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\translation\qt_import.props (18,5) 处重新分配属性: $(QtMsBuildTargets)=“
             
             
             
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\repc\qtrepc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\translation\qttranslation.targets
           ”(先前值:“
             
             
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\repc\qtrepc.targets
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\uic\qt_import.props (14,5) 处重新分配属性: $(QtMsBuildProps)=“
             
             
             
             
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\repc\qtrepc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\translation\qttranslation.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\uic\qtuic.props
           ”(先前值:“
             
             
             
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\repc\qtrepc.props
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\translation\qttranslation.props
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\uic\qt_import.props (18,5) 处重新分配属性: $(QtMsBuildTargets)=“
             
             
             
             
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\repc\qtrepc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\translation\qttranslation.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\uic\qtuic.targets
           ”(先前值:“
             
             
             
             
             
             ;
             C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\idc\qtidc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\repc\qtrepc.targets
           ;
             C:\Users\24583\AppData\Local\QtMsBuild\translation\qttranslation.targets
           ”)
       在 E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj (45,5) 处重新分配属性: $(QtModules)=“core;gui;widgets”(先前值:“core”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\qt_private.props (126,5) 处重新分配属性: $(QtVars)=“DEFINES=/Project/ItemDefinitionGroup/ClCompile/PreprocessorDefinitions;INCLUDEPATH=/Project/ItemDefinitionGroup/ClCompile/AdditionalIncludeDirectories;STDCPP=/Project/ItemDefinitionGroup/ClCompile/LanguageStandard;RUNTIME=/Project/ItemDefinitionGroup/ClCompile/RuntimeLibrary;CL_OPTIONS=/Project/ItemDefinitionGroup/ClCompile/AdditionalOptions;LIBS=/Project/ItemDefinitionGroup/Link/AdditionalDependencies;LINK_OPTIONS=/Project/ItemDefinitionGroup/Link/AdditionalOptions”(先前值:“
             DEFINES=/Project/ItemDefinitionGroup/ClCompile/PreprocessorDefinitions;
             INCLUDEPATH=/Project/ItemDefinitionGroup/ClCompile/AdditionalIncludeDirectories;
             STDCPP=/Project/ItemDefinitionGroup/ClCompile/LanguageStandard;
             RUNTIME=/Project/ItemDefinitionGroup/ClCompile/RuntimeLibrary;
             CL_OPTIONS=/Project/ItemDefinitionGroup/ClCompile/AdditionalOptions;
             LIBS=/Project/ItemDefinitionGroup/Link/AdditionalDependencies;
             LINK_OPTIONS=/Project/ItemDefinitionGroup/Link/AdditionalOptions;
           ;”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\qt_private.props (149,5) 处重新分配属性: $(LinkNatvisFile)=“true”(先前值:“”)
       “SolutionExt”属性是全局属性，不能修改。
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets (35,5) 处重新分配属性: $(TargetDir)=“E:\Lx_cameraS10\x64\Release\”(先前值:“E:\loadrunner\LR\dat\Setup\LoadRunner\MSBuild\..\..\..\..”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets (40,5) 处重新分配属性: $(ExtensionsToDeleteOnClean)=“*.cdf;*.cache;*.obj;*.obj.enc;*.ilk;*.ipdb;*.iobj;*.resources;*.tlb;*.tli;*.tlh;*.tmp;*.rsp;*.pgc;*.pgd;*.meta;*.tlog;*.manifest;*.res;*.pch;*.exp;*.idb;*.rep;*.xdc;*.pdb;*_manifest.rc;*.bsc;*.sbr;*.xml;*.metagen;*.bi;E:\Lx_cameraS10\x64\Release\Lx_cameraS10.exe.manifest;E:\Lx_cameraS10\x64\Release\Lx_cameraS10.tlb;E:\Lx_cameraS10\x64\Release\Lx_cameraS10.pdb;E:\Lx_cameraS10\x64\Release\Lx_cameraS10.exe;E:\Lx_cameraS10\x64\Release\Lx_cameraS10.bsc;E:\Lx_cameraS10\x64\Release\Lx_cameraS10.ilk;E:\Lx_cameraS10\x64\Release\Lx_cameraS10.exe.intermediate.manifest;x64\Release\Lx_cameraS10.vcxproj.FileListAbsolute.txt”(先前值:“*.cdf;*.cache;*.obj;*.obj.enc;*.ilk;*.ipdb;*.iobj;*.resources;*.tlb;*.tli;*.tlh;*.tmp;*.rsp;*.pgc;*.pgd;*.meta;*.tlog;*.manifest;*.res;*.pch;*.exp;*.idb;*.rep;*.xdc;*.pdb;*_manifest.rc;*.bsc;*.sbr;*.xml;*.metagen;*.bi”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.BuildSteps.Targets (32,5) 处重新分配属性: $(DebugType)=“none”(先前值:“”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 E:\vs\MSBuild;$(MSBuildProgramFiles32)\MSBuild
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 E:\vs\MSBuild;$(MSBuildProgramFiles32)\MSBuild
       “Configuration”属性是全局属性，不能修改。
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (185,5) 处重新分配属性: $(_DocumentationFileProduced)=“false”(先前值:“true”)
       “DevEnvDir”属性是全局属性，不能修改。
       “SolutionName”属性是全局属性，不能修改。
       “SolutionFileName”属性是全局属性，不能修改。
       “SolutionPath”属性是全局属性，不能修改。
       “SolutionDir”属性是全局属性，不能修改。
       “SolutionExt”属性是全局属性，不能修改。
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (369,5) 处重新分配属性: $(AutoUnifyAssemblyReferences)=“false”(先前值:“true”)
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (392,5) 处重新分配属性: $(MSBuildCopyMarkerName)=“Lx_camer.0F412300”(先前值:“Lx_cameraS10.vcxproj”)
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (393,5) 处重新分配属性: $(MSBuildCopyMarkerName)=“Lx_camer.0F412300.Up2Date”(先前值:“Lx_camer.0F412300”)
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (528,5) 处重新分配属性: $(ProcessorArchitecture)=“amd64”(先前值:“x64”)
       值为“C:\Program Files\MSBuild”的属性“MSBuildExtensionsPath64”从环境中展开。
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (580,5) 处重新分配属性: $(DelaySign)=“”(先前值:“false”)
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (649,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;”(先前值:“{CandidateAssemblyFiles}”)
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (650,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;{HintPathFromItem}”(先前值:“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;”)
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (651,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;{HintPathFromItem};{TargetFrameworkDirectory}”(先前值:“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;{HintPathFromItem}”)
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (652,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;{HintPathFromItem};{TargetFrameworkDirectory};{AssemblyFoldersFromConfig:E:\vs\MSBuild\Current\Bin\AssemblyFolders.config,};”(先前值:“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;{HintPathFromItem};{TargetFrameworkDirectory}”)
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (653,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;{HintPathFromItem};{TargetFrameworkDirectory};{AssemblyFoldersFromConfig:E:\vs\MSBuild\Current\Bin\AssemblyFolders.config,};;{Registry:Software\Microsoft\,,AssemblyFoldersEx}”(先前值:“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;{HintPathFromItem};{TargetFrameworkDirectory};{AssemblyFoldersFromConfig:E:\vs\MSBuild\Current\Bin\AssemblyFolders.config,};”)
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (654,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;{HintPathFromItem};{TargetFrameworkDirectory};{AssemblyFoldersFromConfig:E:\vs\MSBuild\Current\Bin\AssemblyFolders.config,};;{Registry:Software\Microsoft\,,AssemblyFoldersEx};{AssemblyFolders}”(先前值:“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;{HintPathFromItem};{TargetFrameworkDirectory};{AssemblyFoldersFromConfig:E:\vs\MSBuild\Current\Bin\AssemblyFolders.config,};;{Registry:Software\Microsoft\,,AssemblyFoldersEx}”)
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (655,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;{HintPathFromItem};{TargetFrameworkDirectory};{AssemblyFoldersFromConfig:E:\vs\MSBuild\Current\Bin\AssemblyFolders.config,};;{Registry:Software\Microsoft\,,AssemblyFoldersEx};{AssemblyFolders};{GAC}”(先前值:“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;{HintPathFromItem};{TargetFrameworkDirectory};{AssemblyFoldersFromConfig:E:\vs\MSBuild\Current\Bin\AssemblyFolders.config,};;{Registry:Software\Microsoft\,,AssemblyFoldersEx};{AssemblyFolders}”)
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (656,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;{HintPathFromItem};{TargetFrameworkDirectory};{AssemblyFoldersFromConfig:E:\vs\MSBuild\Current\Bin\AssemblyFolders.config,};;{Registry:Software\Microsoft\,,AssemblyFoldersEx};{AssemblyFolders};{GAC};{RawFileName}”(先前值:“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;{HintPathFromItem};{TargetFrameworkDirectory};{AssemblyFoldersFromConfig:E:\vs\MSBuild\Current\Bin\AssemblyFolders.config,};;{Registry:Software\Microsoft\,,AssemblyFoldersEx};{AssemblyFolders};{GAC}”)
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (657,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;{HintPathFromItem};{TargetFrameworkDirectory};{AssemblyFoldersFromConfig:E:\vs\MSBuild\Current\Bin\AssemblyFolders.config,};;{Registry:Software\Microsoft\,,AssemblyFoldersEx};{AssemblyFolders};{GAC};{RawFileName};E:\Lx_cameraS10\x64\Release\”(先前值:“{CandidateAssemblyFiles};E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;{HintPathFromItem};{TargetFrameworkDirectory};{AssemblyFoldersFromConfig:E:\vs\MSBuild\Current\Bin\AssemblyFolders.config,};;{Registry:Software\Microsoft\,,AssemblyFoldersEx};{AssemblyFolders};{GAC};{RawFileName}”)
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (3896,5) 处重新分配属性: $(_SGenGenerateSerializationAssembliesConfig)=“Auto”(先前值:“”)
       在 E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets (5099,5) 处重新分配属性: $(_TargetsThatPrepareProjectReferences)=“
             AssignProjectConfiguration;
             _SplitProjectReferencesByFileExistence
           ”(先前值:“_SplitProjectReferencesByFileExistence”)
       在 E:\vs\MSBuild\Microsoft\VisualStudio\v17.0\CodeAnalysis\Microsoft.CodeAnalysis.targets (125,5) 处重新分配属性: $(_CodeAnalysisTreatWarningsAsErrors)=“false”(先前值:“”)
       在 E:\vs\MSBuild\Microsoft\VisualStudio\v17.0\CodeAnalysis\Microsoft.CodeAnalysis.targets (234,5) 处重新分配属性: $(CAExcludePath)=“E:\Windows Kits\10\Include\10.0.19041.0\um;E:\Windows Kits\10\Include\10.0.19041.0\shared;E:\Windows Kits\10\Include\10.0.19041.0\winrt;E:\Windows Kits\10\Include\10.0.19041.0\cppwinrt;C:\Program Files (x86)\Windows Kits\NETFXSDK\4.8\Include\um;;”(先前值:“;”)
       在 E:\vs\MSBuild\Microsoft\VisualStudio\v17.0\CodeAnalysis\Microsoft.CodeAnalysis.targets (235,5) 处重新分配属性: $(CAExcludePath)=“E:\Windows Kits\10\Include\10.0.19041.0\ucrt;;E:\Windows Kits\10\Include\10.0.19041.0\um;E:\Windows Kits\10\Include\10.0.19041.0\shared;E:\Windows Kits\10\Include\10.0.19041.0\winrt;E:\Windows Kits\10\Include\10.0.19041.0\cppwinrt;C:\Program Files (x86)\Windows Kits\NETFXSDK\4.8\Include\um;;”(先前值:“E:\Windows Kits\10\Include\10.0.19041.0\um;E:\Windows Kits\10\Include\10.0.19041.0\shared;E:\Windows Kits\10\Include\10.0.19041.0\winrt;E:\Windows Kits\10\Include\10.0.19041.0\cppwinrt;C:\Program Files (x86)\Windows Kits\NETFXSDK\4.8\Include\um;;”)
       在 E:\vs\MSBuild\Microsoft\VisualStudio\v17.0\CodeAnalysis\Microsoft.CodeAnalysis.targets (236,5) 处重新分配属性: $(CAExcludePath)=“E:\vs\VC\Tools\MSVC\14.41.34120\include;E:\Windows Kits\10\Include\10.0.19041.0\ucrt;;E:\Windows Kits\10\Include\10.0.19041.0\um;E:\Windows Kits\10\Include\10.0.19041.0\shared;E:\Windows Kits\10\Include\10.0.19041.0\winrt;E:\Windows Kits\10\Include\10.0.19041.0\cppwinrt;C:\Program Files (x86)\Windows Kits\NETFXSDK\4.8\Include\um;;”(先前值:“E:\Windows Kits\10\Include\10.0.19041.0\ucrt;;E:\Windows Kits\10\Include\10.0.19041.0\um;E:\Windows Kits\10\Include\10.0.19041.0\shared;E:\Windows Kits\10\Include\10.0.19041.0\winrt;E:\Windows Kits\10\Include\10.0.19041.0\cppwinrt;C:\Program Files (x86)\Windows Kits\NETFXSDK\4.8\Include\um;;”)
       在 E:\vs\MSBuild\Microsoft\VisualStudio\v17.0\CodeAnalysis\Microsoft.CodeAnalysis.targets (237,5) 处重新分配属性: $(CAExcludePath)=“E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\include;E:\vs\VC\Tools\MSVC\14.41.34120\include;E:\Windows Kits\10\Include\10.0.19041.0\ucrt;;E:\Windows Kits\10\Include\10.0.19041.0\um;E:\Windows Kits\10\Include\10.0.19041.0\shared;E:\Windows Kits\10\Include\10.0.19041.0\winrt;E:\Windows Kits\10\Include\10.0.19041.0\cppwinrt;C:\Program Files (x86)\Windows Kits\NETFXSDK\4.8\Include\um;;”(先前值:“E:\vs\VC\Tools\MSVC\14.41.34120\include;E:\Windows Kits\10\Include\10.0.19041.0\ucrt;;E:\Windows Kits\10\Include\10.0.19041.0\um;E:\Windows Kits\10\Include\10.0.19041.0\shared;E:\Windows Kits\10\Include\10.0.19041.0\winrt;E:\Windows Kits\10\Include\10.0.19041.0\cppwinrt;C:\Program Files (x86)\Windows Kits\NETFXSDK\4.8\Include\um;;”)
       在 E:\vs\MSBuild\Microsoft\VisualStudio\v17.0\CodeAnalysis\Microsoft.CodeAnalysis.targets (240,5) 处重新分配属性: $(PrepareForBuildDependsOn)=“;GetFrameworkPaths;GetReferenceAssemblyPaths;AssignLinkMetadata;SetCABuildNativeEnvironmentVariables”(先前值:“;GetFrameworkPaths;GetReferenceAssemblyPaths;AssignLinkMetadata”)
       在 C:\Windows\Microsoft.NET\Framework\v4.0.30319\Microsoft.Xaml.targets (35,5) 处重新分配属性: $(PrepareResourcesDependsOn)=“
             XamlMarkupCompilePass1;
             XamlMarkupCompilePass2;
             
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
            
           ”(先前值:“
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           ”)
       在 E:\vs\MSBuild\Microsoft\VisualStudio\v17.0\TeamTest\Microsoft.TeamTest.targets (4,5) 处重新分配属性: $(ResolveReferencesDependsOn)=“
             
             BeforeResolveReferences;
             AssignProjectConfiguration;
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             ResolveNativeReferences;
             ResolveAssemblyReferences;
             GenerateBindingRedirects;
             GenerateBindingRedirectsUpdateAppConfig;
             ResolveComReferences;
             AfterResolveReferences
           ;
             ResolveTestReferences
           ”(先前值:“
             BeforeResolveReferences;
             AssignProjectConfiguration;
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             ResolveNativeReferences;
             ResolveAssemblyReferences;
             GenerateBindingRedirects;
             GenerateBindingRedirectsUpdateAppConfig;
             ResolveComReferences;
             AfterResolveReferences
           ”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 E:\vs\MSBuild;$(MSBuildProgramFiles32)\MSBuild
       尝试使用扩展路径 E:\vs\MSBuild 导入 E:\vs\MSBuild\$(MSBuildToolsVersion)\Microsoft.Common.targets\ImportAfter\*
       在 E:\vs\MSBuild\Microsoft\NuGet\17.0\Microsoft.NuGet.targets (74,5) 处重新分配属性: $(ProjectLockFile)=“obj\project.assets.json”(先前值:“E:\Lx_cameraS10\Lx_cameraS10\obj\project.assets.json”)
       在 E:\vs\MSBuild\Microsoft\NuGet\17.0\Microsoft.NuGet.targets (185,5) 处重新分配属性: $(ResolveAssemblyReferencesDependsOn)=“
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;ResolveNuGetPackageAssets”(先前值:“
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ”)
       在 E:\vs\MSBuild\Microsoft\NuGet\17.0\Microsoft.NuGet.targets (186,5) 处重新分配属性: $(PrepareResourcesDependsOn)=“ResolveNuGetPackageAssets;
             XamlMarkupCompilePass1;
             XamlMarkupCompilePass2;
             
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
            
           ”(先前值:“
             XamlMarkupCompilePass1;
             XamlMarkupCompilePass2;
             
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
            
           ”)
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 E:\vs\MSBuild;$(MSBuildProgramFiles32)\MSBuild
       将用于 $(MSBuildExtensionsPath) 的搜索路径为 E:\vs\MSBuild;$(MSBuildProgramFiles32)\MSBuild
       尝试使用扩展路径 E:\vs\MSBuild 导入 E:\vs\MSBuild\Microsoft\VisualStudio\WebTools.Aspire\Microsoft.WebTools.Aspire.targets
       在 E:\vs\MSBuild\Microsoft\VisualStudio\WebTools.Aspire\Microsoft.WebTools.Aspire.targets (25,5) 处重新分配属性: $(JsonSchemaCombinedFilePath)=“E:\Lx_cameraS10\Lx_cameraS10\x64\Release\CombinedComponentSchema.json”(先前值:“x64\Release\\CombinedComponentSchema.json”)
       在 E:\vs\MSBuild\Microsoft\VisualStudio\WebTools.Aspire\Microsoft.WebTools.Aspire.targets (27,5) 处重新分配属性: $(AppSettingsJsonSchemaCombinedFilePath)=“E:\Lx_cameraS10\Lx_cameraS10\x64\Release\AppSettingsSchema.json”(先前值:“x64\Release\\AppSettingsSchema.json”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.BuildSteps.Targets (39,5) 处重新分配属性: $(DebugType)=“”(先前值:“none”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.BuildSteps.Targets (122,5) 处重新分配属性: $(BuildDependsOn)=“
             _PrepareForBuild;
             
             ResolveReferences;
             PrepareForBuild;
             InitializeBuildStatus;
             BuildGenerateSources;
             BuildCompile;
             BuildLink;
           ;
             AfterBuild;
             IncrementalClean;
             TlogCleanup;
             FinalizeBuildStatus;
           ”(先前值:“
             BeforeBuild;
             CoreBuild;
             AfterBuild
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.BuildSteps.Targets (131,5) 处重新分配属性: $(RebuildDependsOn)=“
             _PrepareForRebuild;
             
             BeforeRebuild;
             Clean;
             Build;
             AfterRebuild;
           ;
           ”(先前值:“
             BeforeRebuild;
             Clean;
             Build;
             AfterRebuild;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.BuildSteps.Targets (136,5) 处重新分配属性: $(CleanDependsOn)=“
             _PrepareForClean;
             
             BeforeClean;
             UnmanagedUnregistration;
             CoreClean;
             CleanReferencedProjects;
             CleanPublishFolder;
             AfterClean
           ;
           ”(先前值:“
             BeforeClean;
             UnmanagedUnregistration;
             CoreClean;
             CleanReferencedProjects;
             CleanPublishFolder;
             AfterClean
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (60,5) 处重新分配属性: $(BeforeBuildGenerateSourcesTargets)=“
             
             ;
             BeforeBuildGenerateSources;
           ;
           ”(先前值:“
             ;
             BeforeBuildGenerateSources;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (71,5) 处重新分配属性: $(AfterBuildGenerateSourcesTargets)=“
             
             ;
             AfterBuildGenerateSources;
           ;
             AfterBuildGenerateSourcesEvent;
           ”(先前值:“
             ;
             AfterBuildGenerateSources;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (140,5) 处重新分配属性: $(BuildGenerateSourcesAction)=“_BuildGenerateSourcesAction”(先前值:“Build”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (141,5) 处重新分配属性: $(BuildCompileAction)=“_BuildCompileAction”(先前值:“Build”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (142,5) 处重新分配属性: $(BuildLinkAction)=“_BuildLinkAction”(先前值:“Build”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (249,5) 处重新分配属性: $(DetermineProjectTypeTargets)=“_PrepareForReferenceResolution;
             ;
             AddExternalIncludDirectoriesToPaths
           ”(先前值:“
             ;
             AddExternalIncludDirectoriesToPaths
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (311,5) 处重新分配属性: $(ResolveReferencesDependsOn)=“_PrepareForReferenceResolution;ComputeCrtSDKReference;
             
             BeforeResolveReferences;
             AssignProjectConfiguration;
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             ResolveNativeReferences;
             ResolveAssemblyReferences;
             GenerateBindingRedirects;
             GenerateBindingRedirectsUpdateAppConfig;
             ResolveComReferences;
             AfterResolveReferences
           ;
             ResolveTestReferences
           ”(先前值:“
             
             BeforeResolveReferences;
             AssignProjectConfiguration;
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             ResolveNativeReferences;
             ResolveAssemblyReferences;
             GenerateBindingRedirects;
             GenerateBindingRedirectsUpdateAppConfig;
             ResolveComReferences;
             AfterResolveReferences
           ;
             ResolveTestReferences
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (312,5) 处重新分配属性: $(ResolveAssemblyReferencesDependsOn)=“_PrepareForReferenceResolution;
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;ResolveNuGetPackageAssets”(先前值:“
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;ResolveNuGetPackageAssets”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (313,5) 处重新分配属性: $(ResolveSDKReferencesDependsOn)=“_PrepareForReferenceResolution;ComputeCrtSDKReference;
             GetInstalledSDKLocations
           ”(先前值:“
             GetInstalledSDKLocations
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (639,5) 处重新分配属性: $(ComputeCompileInputsTargets)=“
             
             ;
             GenerateTargetFrameworkMonikerAttribute;
           ;
             ComputeMIDLGeneratedCompileInputs;
           ”(先前值:“
             ;
             GenerateTargetFrameworkMonikerAttribute;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (952,5) 处重新分配属性: $(ComputeLinkInputsTargets)=“
             
             ;
             ComputeRCGeneratedLinkInputs;
           ;
             ComputeManifestGeneratedLinkerInputs;
           ”(先前值:“
             ;
             ComputeRCGeneratedLinkInputs;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (1123,5) 处重新分配属性: $(GetTargetPathDependsOn)=“_PrepareForReferenceResolution;GetResolvedWinMD;”(先前值:“”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (1149,5) 处重新分配属性: $(ComputeCompileInputsTargets)=“
             
             
             ;
             GenerateTargetFrameworkMonikerAttribute;
           ;
             ComputeMIDLGeneratedCompileInputs;
           ;
             ComputeCLInputPDBName;
             ComputeReferenceCLInput;
             WarnCompileDuplicatedFilename
           ”(先前值:“
             
             ;
             GenerateTargetFrameworkMonikerAttribute;
           ;
             ComputeMIDLGeneratedCompileInputs;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (1201,5) 处重新分配属性: $(ComputeLinkInputsTargets)=“
             
             
             ;
             ComputeRCGeneratedLinkInputs;
           ;
             ComputeManifestGeneratedLinkerInputs;
           ;
             ComputeCustomBuildOutput;
           ”(先前值:“
             
             ;
             ComputeRCGeneratedLinkInputs;
           ;
             ComputeManifestGeneratedLinkerInputs;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (1208,5) 处重新分配属性: $(ComputeLibInputsTargets)=“
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeCustomBuildOutput;
           ”(先前值:“
             ;
             ComputeRCGeneratedLibInputs;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (1215,5) 处重新分配属性: $(ComputeImpLibInputsTargets)=“
             
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeRCGeneratedImpLibInputs;
           ;
             ComputeCustomBuildOutput;
           ”(先前值:“
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeRCGeneratedImpLibInputs;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (1276,5) 处重新分配属性: $(ComputeLinkInputsTargets)=“
             
             
             
             ;
             ComputeRCGeneratedLinkInputs;
           ;
             ComputeManifestGeneratedLinkerInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLinkInputs;
           ”(先前值:“
             
             
             ;
             ComputeRCGeneratedLinkInputs;
           ;
             ComputeManifestGeneratedLinkerInputs;
           ;
             ComputeCustomBuildOutput;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (1291,5) 处重新分配属性: $(ComputeLibInputsTargets)=“
             
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLibInputs;
           ”(先前值:“
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeCustomBuildOutput;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (1306,5) 处重新分配属性: $(ComputeImpLibInputsTargets)=“
             
             
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeRCGeneratedImpLibInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedImpLibInputs;
           ”(先前值:“
             
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeRCGeneratedImpLibInputs;
           ;
             ComputeCustomBuildOutput;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (1337,5) 处重新分配属性: $(ComputeLinkInputsTargets)=“
             
             
             
             
             ;
             ComputeRCGeneratedLinkInputs;
           ;
             ComputeManifestGeneratedLinkerInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLinkInputs;
           ;
             ComputeLinkInputsFromProject;
           ”(先前值:“
             
             
             
             ;
             ComputeRCGeneratedLinkInputs;
           ;
             ComputeManifestGeneratedLinkerInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLinkInputs;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (1355,5) 处重新分配属性: $(ComputeLibInputsTargets)=“
             
             
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLibInputs;
           ;
             ComputeLibInputsFromProject;
           ”(先前值:“
             
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLibInputs;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (1373,5) 处重新分配属性: $(ComputeImpLibInputsTargets)=“
             
             
             
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeRCGeneratedImpLibInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedImpLibInputs;
           ;
             ComputeImpLibInputsFromProject;
           ”(先前值:“
             
             
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeRCGeneratedImpLibInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedImpLibInputs;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (1497,5) 处重新分配属性: $(ComputeLinkInputsTargets)=“
             
             
             
             
             
             ;
             ComputeRCGeneratedLinkInputs;
           ;
             ComputeManifestGeneratedLinkerInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLinkInputs;
           ;
             ComputeLinkInputsFromProject;
           ;
             ComputeReferenceLinkInputs;
           ”(先前值:“
             
             
             
             
             ;
             ComputeRCGeneratedLinkInputs;
           ;
             ComputeManifestGeneratedLinkerInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLinkInputs;
           ;
             ComputeLinkInputsFromProject;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (1535,5) 处重新分配属性: $(ComputeLibInputsTargets)=“
             
             
             
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLibInputs;
           ;
             ComputeLibInputsFromProject;
           ;
             ComputeReferenceLibInputs;
           ”(先前值:“
             
             
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLibInputs;
           ;
             ComputeLibInputsFromProject;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (1592,5) 处重新分配属性: $(ComputeLibInputsTargets)=“
             ComputeLibAdditionalOptions;
             
             
             
             
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLibInputs;
           ;
             ComputeLibInputsFromProject;
           ;
             ComputeReferenceLibInputs;
           
           ”(先前值:“
             
             
             
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLibInputs;
           ;
             ComputeLibInputsFromProject;
           ;
             ComputeReferenceLibInputs;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (1780,5) 处重新分配属性: $(GetProjectInfoForReferenceDependsOn)=“
             
             ;
             AddPublicIncludeDirectoriesToProjectsInfoForReference;
           ;
             AddPublicBMIsToProjectsInfoForReference;
             AddDeployRecipeFileToProjectsInfoForReference;
             AddLibrariesToProjectsInfoForReference;
           ”(先前值:“
             ;
             AddPublicIncludeDirectoriesToProjectsInfoForReference;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (2180,5) 处重新分配属性: $(DocumentationProjectOutputGroupDependsOn)=“ResolvedXDCMake;ComputeCLCompileGeneratedXDCFiles”(先前值:“”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets (2246,5) 处重新分配属性: $(ContentFilesProjectOutputGroupDependsOn)=“PrepareForBuild;AssignTargetPaths;PrepareForBuild;AssignTargetPaths;MakeDirsForFxc”(先前值:“PrepareForBuild;AssignTargetPaths”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets (315,5) 处重新分配属性: $(ComputeCompileInputsTargets)=“
             
             
             
             ;
             GenerateTargetFrameworkMonikerAttribute;
           ;
             ComputeMIDLGeneratedCompileInputs;
           ;
             ComputeCLInputPDBName;
             ComputeReferenceCLInput;
             WarnCompileDuplicatedFilename
           ;
             ;
             ComputeStdModulesCompileInputs;
             FixupCLCompileOptions;
             SetModuleDependencies;
           ”(先前值:“
             
             
             ;
             GenerateTargetFrameworkMonikerAttribute;
           ;
             ComputeMIDLGeneratedCompileInputs;
           ;
             ComputeCLInputPDBName;
             ComputeReferenceCLInput;
             WarnCompileDuplicatedFilename
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets (2075,5) 处重新分配属性: $(BuildingProject)=“true”(先前值:“false”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets (2621,5) 处重新分配属性: $(ContentFilesProjectOutputGroupDependsOn)=“PrepareForBuild;AssignTargetPaths;PrepareForBuild;AssignTargetPaths;MakeDirsForFxc;_CreateCopyFileItems;”(先前值:“PrepareForBuild;AssignTargetPaths;PrepareForBuild;AssignTargetPaths;MakeDirsForFxc”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.WindowsSDK.targets (16,5) 处重新分配属性: $(PrepareForBuildDependsOn)=“_CheckWindowsSDKInstalled;;GetFrameworkPaths;GetReferenceAssemblyPaths;AssignLinkMetadata;SetCABuildNativeEnvironmentVariables”(先前值:“;GetFrameworkPaths;GetReferenceAssemblyPaths;AssignLinkMetadata;SetCABuildNativeEnvironmentVariables”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppClean.targets (22,5) 处重新分配属性: $(CleanDependsOn)=“
             
             _PrepareForClean;
             
             BeforeClean;
             UnmanagedUnregistration;
             CoreClean;
             CleanReferencedProjects;
             CleanPublishFolder;
             AfterClean
           ;
           ;
             CppClean
           ”(先前值:“
             _PrepareForClean;
             
             BeforeClean;
             UnmanagedUnregistration;
             CoreClean;
             CleanReferencedProjects;
             CleanPublishFolder;
             AfterClean
           ;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppClean.targets (92,5) 处重新分配属性: $(CppCleanDependsOn)=“
             BeforeCppClean;
             ;
             CoreCppClean;
             AfterCppClean;
           ;PGInstrumentedClean”(先前值:“
             BeforeCppClean;
             ;
             CoreCppClean;
             AfterCppClean;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.DesignTime.targets (539,5) 处重新分配属性: $(BuildDependsOn)=“SetTelemetryEnvironmentVariables;
             _PrepareForBuild;
             
             ResolveReferences;
             PrepareForBuild;
             InitializeBuildStatus;
             BuildGenerateSources;
             BuildCompile;
             BuildLink;
           ;
             AfterBuild;
             IncrementalClean;
             TlogCleanup;
             FinalizeBuildStatus;
           ”(先前值:“
             _PrepareForBuild;
             
             ResolveReferences;
             PrepareForBuild;
             InitializeBuildStatus;
             BuildGenerateSources;
             BuildCompile;
             BuildLink;
           ;
             AfterBuild;
             IncrementalClean;
             TlogCleanup;
             FinalizeBuildStatus;
           ”)
       在 E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.DesignTime.targets (540,5) 处重新分配属性: $(RebuildDependsOn)=“SetTelemetryEnvironmentVariables;
             _PrepareForRebuild;
             
             BeforeRebuild;
             Clean;
             Build;
             AfterRebuild;
           ;
           ”(先前值:“
             _PrepareForRebuild;
             
             BeforeRebuild;
             Clean;
             Build;
             AfterRebuild;
           ;
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\qt_build.targets (21,5) 处重新分配属性: $(DetermineProjectTypeTargets)=“
             _PrepareForReferenceResolution;
             ;
             AddExternalIncludDirectoriesToPaths
           ;
             QtUpdatePaths
           ”(先前值:“_PrepareForReferenceResolution;
             ;
             AddExternalIncludDirectoriesToPaths
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\qt_build.targets (25,5) 处重新分配属性: $(ComputeCompileInputsTargets)=“
             
             
             
             
             ;
             GenerateTargetFrameworkMonikerAttribute;
           ;
             ComputeMIDLGeneratedCompileInputs;
           ;
             ComputeCLInputPDBName;
             ComputeReferenceCLInput;
             WarnCompileDuplicatedFilename
           ;
             ;
             ComputeStdModulesCompileInputs;
             FixupCLCompileOptions;
             SetModuleDependencies;
           ;
             QtAddCompilerSources
           ”(先前值:“
             
             
             
             ;
             GenerateTargetFrameworkMonikerAttribute;
           ;
             ComputeMIDLGeneratedCompileInputs;
           ;
             ComputeCLInputPDBName;
             ComputeReferenceCLInput;
             WarnCompileDuplicatedFilename
           ;
             ;
             ComputeStdModulesCompileInputs;
             FixupCLCompileOptions;
             SetModuleDependencies;
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\qt_build.targets (33,5) 处重新分配属性: $(CleanDependsOn)=“
             
             
             _PrepareForClean;
             
             BeforeClean;
             UnmanagedUnregistration;
             CoreClean;
             CleanReferencedProjects;
             CleanPublishFolder;
             AfterClean
           ;
           ;
             CppClean
           ;
             QtClean
           ”(先前值:“
             
             _PrepareForClean;
             
             BeforeClean;
             UnmanagedUnregistration;
             CoreClean;
             CleanReferencedProjects;
             CleanPublishFolder;
             AfterClean
           ;
           ;
             CppClean
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.targets (45,5) 处重新分配属性: $(QtDeployFiles)=“E:\Lx_cameraS10\x64\Release\Lx_cameraS10.exe”(先前值:“”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\deploy\qtdeploy.targets (51,5) 处重新分配属性: $(QtDeployEnv)=“VCINSTALLDIR=E:\vs\VC\;PATH=F:/QT/QT/5.13.1/msvc2017_64/bin;C:\Python312\Scripts\;C:\Python312\;D:\VRM\vma\bin\;E:\app\24583\product\11.2.0\dbhome_2\bin;E:\orc\data\dbhomeXE\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;E;\Vivo互传\EasyShare\x64\;C;\strawberry\c\bin;C:\strawberry\perl\bin;E;\Vivo互传\EasyShare\x64\;%;PENNI2_REDIST64%;\Rational rose\ROSEanzhuang\common;F:\R\R-4.3.3\bin;C:\Strawberry\c\bin;C:\Strawberry\perl\site\bin;E:\Vivo互传\EasyShare\x86\;\;ivo互传\EasyShare\x64\;\;ianrushi\proteus\yagarto-20121222\bin;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\ProgramData\chocolatey\bin;E:\中软国际大四开学课设\node\;D:\cmake\;make-3.29.7-windows-x86_64\bin;E:\opencv-4.9.0-windows\opencv\build\x64\vc16\bin;D:\ifm3D\ifm3d 1.5.3\bin;E:\Lua\5.1;E:\Lua\5.1\clibs;E:\PCL 1.14.1\bin;E:\PCL 1.14.1\3rdParty\VTK\bin;E:\PCL 1.14.1\3rdParty\FLANN\bin;E:\PCL 1.14.1\3rdParty\Qhull\bin;E:\PCL 1.14.1\3rdParty\OpenNI2\Tools;F:\QT\QT\5.13.1\msvc2017_64\bin;C:\Users\24583\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Windows PowerShell;F:\opencv3.0\opencv\build\x86\vc12\bin;C:\Program Files\GitHub CLI\;F:\Git\Git\cmd;C:\Users\24583\.cargo\bin;D:\anaconda;D:\anaconda\Library\mingw-w64\bin;D:\anaconda\Library\usr\bin;D:\anaconda\Library\bin;D:\anaconda\Scripts;C:\Program Files\MySQL\MySQL Shell 8.1\bin\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\24583\AppData\Local\Microsoft\WindowsApps;E:\java\IntelliJ IDEA Community Edition 2022.2\bin;E:\PC\PyCharm Community Edition 2022.2\bin;D:\MySQL\MySQL Server 5.7\bin;C:\Users\24583\AppData\Roaming\npm;D:\cmake\cmake-3.29.7-windows-x86_64\bin;C:\Users\24583\.dotnet\tools”(先前值:“VCINSTALLDIR=E:\vs\VC\”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets (28,5) 处重新分配属性: $(QtBuildTargets)=“QtRcc;QtMoc;”(先前值:“QtMoc;”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets (592,5) 处重新分配属性: $(ComputeLinkInputsTargets)=“
             
             
             
             
             
             
             ;
             ComputeRCGeneratedLinkInputs;
           ;
             ComputeManifestGeneratedLinkerInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLinkInputs;
           ;
             ComputeLinkInputsFromProject;
           ;
             ComputeReferenceLinkInputs;
           ;
             ;QtRccPass2_Link;
           ”(先前值:“
             
             
             
             
             
             ;
             ComputeRCGeneratedLinkInputs;
           ;
             ComputeManifestGeneratedLinkerInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLinkInputs;
           ;
             ComputeLinkInputsFromProject;
           ;
             ComputeReferenceLinkInputs;
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets (596,5) 处重新分配属性: $(ComputeLibInputsTargets)=“
             
             ComputeLibAdditionalOptions;
             
             
             
             
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLibInputs;
           ;
             ComputeLibInputsFromProject;
           ;
             ComputeReferenceLibInputs;
           
           ;
             ;QtRccPass2_Lib;
           ”(先前值:“
             ComputeLibAdditionalOptions;
             
             
             
             
             
             ;
             ComputeRCGeneratedLibInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLibInputs;
           ;
             ComputeLibInputsFromProject;
           ;
             ComputeReferenceLibInputs;
           
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\qml\qtqml.targets (28,5) 处重新分配属性: $(QtBuildTargets)=“QtRcc;QtMoc;;QtQml”(先前值:“QtRcc;QtMoc;”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\qml\qtqml_cache.targets (27,5) 处重新分配属性: $(QtBuildTargets)=“QtRcc;QtMoc;;QtQml;QtQmlCache”(先前值:“QtRcc;QtMoc;;QtQml”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\qml\qtqml_cache.targets (28,5) 处重新分配属性: $(QtRccDependsOn)=“
             QtVarsLoad;
             QtRccPrepare;
             QtRccSetModified;
             QtRccOverrideCpp;
             
           ;QtQmlCache”(先前值:“
             QtVarsLoad;
             QtRccPrepare;
             QtRccSetModified;
             QtRccOverrideCpp;
             
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\qml\qtqml_static.targets (29,5) 处重新分配属性: $(QtBuildTargets)=“QtRcc;QtMoc;;QtQml;QtQmlCache;QtQmlStatic”(先前值:“QtRcc;QtMoc;;QtQml;QtQmlCache”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\qml\qtqml_static.targets (30,5) 处重新分配属性: $(ComputeLinkInputsTargets)=“
             
             
             
             
             
             
             ;
             ComputeRCGeneratedLinkInputs;
           ;
             ComputeManifestGeneratedLinkerInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLinkInputs;
           ;
             ComputeLinkInputsFromProject;
           ;
             ComputeReferenceLinkInputs;
           ;
             ;QtRccPass2_Link;
           ;QtQmlStaticLink”(先前值:“
             
             
             
             
             
             
             ;
             ComputeRCGeneratedLinkInputs;
           ;
             ComputeManifestGeneratedLinkerInputs;
           ;
             ComputeCustomBuildOutput;
           ;
             ComputeCLGeneratedLinkInputs;
           ;
             ComputeLinkInputsFromProject;
           ;
             ComputeReferenceLinkInputs;
           ;
             ;QtRccPass2_Link;
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\repc\qtrepc.targets (28,5) 处重新分配属性: $(QtBuildTargets)=“QtRepc;QtRcc;QtMoc;;QtQml;QtQmlCache;QtQmlStatic”(先前值:“QtRcc;QtMoc;;QtQml;QtQmlCache;QtQmlStatic”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\translation\qttranslation.targets (36,5) 处重新分配属性: $(BuildDependsOn)=“
             SetTelemetryEnvironmentVariables;
             _PrepareForBuild;
             
             ResolveReferences;
             PrepareForBuild;
             InitializeBuildStatus;
             BuildGenerateSources;
             BuildCompile;
             BuildLink;
           ;
             AfterBuild;
             IncrementalClean;
             TlogCleanup;
             FinalizeBuildStatus;
           ;
             QtTranslation
           ”(先前值:“SetTelemetryEnvironmentVariables;
             _PrepareForBuild;
             
             ResolveReferences;
             PrepareForBuild;
             InitializeBuildStatus;
             BuildGenerateSources;
             BuildCompile;
             BuildLink;
           ;
             AfterBuild;
             IncrementalClean;
             TlogCleanup;
             FinalizeBuildStatus;
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\translation\qttranslation.targets (40,5) 处重新分配属性: $(CleanDependsOn)=“
             
             
             
             _PrepareForClean;
             
             BeforeClean;
             UnmanagedUnregistration;
             CoreClean;
             CleanReferencedProjects;
             CleanPublishFolder;
             AfterClean
           ;
           ;
             CppClean
           ;
             QtClean
           ;
             QtTranslationClean
           ”(先前值:“
             
             
             _PrepareForClean;
             
             BeforeClean;
             UnmanagedUnregistration;
             CoreClean;
             CleanReferencedProjects;
             CleanPublishFolder;
             AfterClean
           ;
           ;
             CppClean
           ;
             QtClean
           ”)
       在 C:\Users\24583\AppData\Local\QtMsBuild\uic\qtuic.targets (28,5) 处重新分配属性: $(QtBuildTargets)=“QtUic;QtRepc;QtRcc;QtMoc;;QtQml;QtQmlCache;QtQmlStatic”(先前值:“QtRepc;QtRcc;QtMoc;;QtQml;QtQmlCache;QtQmlStatic”)
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.BuildSteps.Targets”中的目标“GenerateTargetFrameworkMonikerAttribute”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“GenerateTargetFrameworkMonikerAttribute”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.BuildSteps.Targets”中的目标“Build”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“Build”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.BuildSteps.Targets”中的目标“Rebuild”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“Rebuild”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.BuildSteps.Targets”中的目标“AfterBuild”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“AfterBuild”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“PrepareForBuild”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“PrepareForBuild”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“GetTargetPath”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“GetTargetPath”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ComputeIntermediateSatelliteAssemblies”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“ComputeIntermediateSatelliteAssemblies”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ClCompile”重写项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ClCompile”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ResourceCompile”重写项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ResourceCompile”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“Lib”重写项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“Lib”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“Link”重写项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“Link”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“AllProjectOutputGroups”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“AllProjectOutputGroups”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“BuiltProjectOutputGroup”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“BuiltProjectOutputGroup”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“DebugSymbolsProjectOutputGroup”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“DebugSymbolsProjectOutputGroup”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“DocumentationProjectOutputGroup”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“DocumentationProjectOutputGroup”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“SourceFilesProjectOutputGroup”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“SourceFilesProjectOutputGroup”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ContentFilesProjectOutputGroup”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“ContentFilesProjectOutputGroup”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“AllProjectOutputGroupsDependencies”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“AllProjectOutputGroupsDependencies”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“BuiltProjectOutputGroupDependencies”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“BuiltProjectOutputGroupDependencies”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“DebugSymbolsProjectOutputGroupDependencies”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“DebugSymbolsProjectOutputGroupDependencies”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“DocumentationProjectOutputGroupDependencies”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“DocumentationProjectOutputGroupDependencies”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“PreBuildEvent”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“PreBuildEvent”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“PostBuildEvent”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“PostBuildEvent”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“ClCompile”重写项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ClCompile”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“Link”重写项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“Link”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“Lib”重写项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“Lib”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“ImpLib”重写项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ImpLib”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“Midl”重写项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“Midl”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“ResourceCompile”重写项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ResourceCompile”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“BeforeResGen”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“BeforeResGen”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“ResGen”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“ResGen”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“GenerateSatelliteAssemblies”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“GenerateSatelliteAssemblies”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“Manifest”重写项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“Manifest”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“XdcMake”重写项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“XdcMake”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“BscMake”重写项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“BscMake”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“ComputeMetaGenInputs”重写项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.MetaGen.targets”中的目标“ComputeMetaGenInputs”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“GetNativeManifest”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“GetNativeManifest”。
       正在使用项目“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.DesignTime.targets”中的目标“GetTargetPathWithTargetPlatformMoniker”重写项目“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“GetTargetPathWithTargetPlatformMoniker”。
       正在使用项目“C:\Users\24583\AppData\Local\QtMsBuild\uic\qtuic.targets”中的目标“QtUicClean”重写项目“C:\Users\24583\AppData\Local\QtMsBuild\repc\qtrepc.targets”中的目标“QtUicClean”。
       项目中不存在 BeforeTargets 特性中的“E:\vs\MSBuild\Microsoft\VisualStudio\WebTools.Aspire\Microsoft.WebTools.Aspire.targets (44,11)”位置列出的目标“CompileDesignTime”，将忽略该目标。
       项目中不存在 BeforeTargets 特性中的“E:\vs\MSBuild\Microsoft\VisualStudio\WebTools.Aspire\Microsoft.WebTools.Aspire.targets (57,11)”位置列出的目标“CompileDesignTime”，将忽略该目标。
生成启动时间为 2024/11/10 9:35:29。
日志记录详细程度设置为: Detailed。     1>项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”在节点 2 上(Build 个目标)。
     1>项目文件包含 ToolsVersion="17.0"。此工具集未知或缺失(在此情况下，您可以通过安装合适的 MSBuild 版本来解决此问题)，或者生成可能已被强制到特定的 ToolsVersion (出于策略原因)。将项目视为具有 ToolsVersion="Current"。有关详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=293424。
       由于条件的计算结果为 false，已跳过目标“EnableIntermediateOutputPathMismatchWarning”；('$(RestoreProjectStyle)' == 'PackageReference')的计算结果为('' == 'PackageReference')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“_CheckForInvalidConfigurationAndPlatform”(目标“SetTelemetryEnvironmentVariables”依赖于它):
       由于 false 条件，已跳过任务“Error”；( '$(_InvalidConfigurationError)' == 'true' )计算为( '' == 'true' )。
       由于 false 条件，已跳过任务“Warning”；( '$(_InvalidConfigurationWarning)' == 'true' )计算为( '' == 'true' )。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Message”任务。
       任务“Message”
         Configuration=Release
       已完成执行任务“Message”的操作。
       任务“Message”
         Platform=x64
       已完成执行任务“Message”的操作。
       由于 false 条件，已跳过任务“Error”；('$(OutDir)' != '' and !HasTrailingSlash('$(OutDir)'))计算为('E:\Lx_cameraS10\x64\Release\' != '' and !HasTrailingSlash('E:\Lx_cameraS10\x64\Release\'))。
       由于 false 条件，已跳过任务“Error”；('$(IntermediateOutputPath)' != '' and !HasTrailingSlash('$(IntermediateOutputPath)'))计算为('x64\Release\' != '' and !HasTrailingSlash('x64\Release\'))。
       由于 false 条件，已跳过任务“Error”；('$(BaseIntermediateOutputPath)' != '' and !HasTrailingSlash('$(BaseIntermediateOutputPath)'))计算为('obj\' != '' and !HasTrailingSlash('obj\'))。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；( '$(Prefer32Bit)' == 'true' and '$(PreferNativeArm64)' == 'true' )计算为( '' == 'true' and '' == 'true' )。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；( '$(NoWin32Manifest)' == 'true' and '$(PreferNativeArm64)' == 'true' )计算为( '' == 'true' and '' == 'true' )。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；( '$(PreferNativeArm64)' == 'true' and '$(Platform)' != 'AnyCPU' )计算为( '' == 'true' and 'x64' != 'AnyCPU' )。
       由于 false 条件，已跳过任务“Error”；( '$(_InitialMSBuildProjectExtensionsPath)' != '' And '$(MSBuildProjectExtensionsPath)' != '$(_InitialMSBuildProjectExtensionsPath)' )计算为( 'E:\Lx_cameraS10\Lx_cameraS10\obj\' != '' And 'E:\Lx_cameraS10\Lx_cameraS10\obj\' != 'E:\Lx_cameraS10\Lx_cameraS10\obj\' )。
       由于 false 条件，已跳过任务“Warning”；( '$(EnableBaseIntermediateOutputPathMismatchWarning)' == 'true' And '$(_InitialBaseIntermediateOutputPath)' != '$(BaseIntermediateOutputPath)' And '$(BaseIntermediateOutputPath)' != '$(MSBuildProjectExtensionsPath)' )计算为( '' == 'true' And 'obj\' != 'obj\' And 'obj\' != 'E:\Lx_cameraS10\Lx_cameraS10\obj\' )。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_CheckForInvalidConfigurationAndPlatform”的操作。
       已跳过目标“_CheckForInvalidConfigurationAndPlatform”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.DesignTime.targets”中的目标“SetTelemetryEnvironmentVariables”(目标“Build”依赖于它):
       正在使用程序集“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Build.CppTasks.Common.dll”中的“SetEnv”任务。
       任务“SetEnv”
         VSTEL_SolutionSessionID={7987CE8E-4F1F-4F87-8B67-A2DFAC5006DF}
       已完成执行任务“SetEnv”的操作。
       任务“SetEnv”
         VSTEL_CurrentSolutionBuildID=3183460482
       已完成执行任务“SetEnv”的操作。
       任务“SetEnv”
         VSTEL_ProjectID={B4A72FB9-8EC8-4F70-AFB1-D21B7953EFCA}
       已完成执行任务“SetEnv”的操作。
       任务“SetEnv”
         VSTEL_SolutionPath=E:\Lx_cameraS10\Lx_cameraS10.sln
       已完成执行任务“SetEnv”的操作。
       任务“SetEnv”
         VSTEL_MSBuildProjectFullPath=E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj
       已完成执行任务“SetEnv”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“SetTelemetryEnvironmentVariables”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.BuildSteps.Targets”中的目标“_PrepareForBuild”(目标“Build”依赖于它):
       由于 false 条件，已跳过任务“CreateItem”；('%(CustomBuild.IncludeFileToTool)'!='')计算为(''!='')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_PrepareForBuild”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“_PrepareForReferenceResolution”(目标“ResolveReferences”依赖于它):
       由于 false 条件，已跳过任务“VCMessage”；('$(WarnAboutIndividualManagedFiles)' == 'true')计算为('' == 'true')。
       由于 false 条件，已跳过任务“Message”；('$(_REFERENCE_DEBUG)'=='true')计算为(''=='true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_PrepareForReferenceResolution”的操作。
       由于条件的计算结果为 false，已跳过目标“ComputeCrtSDKReference”；('@(ClCompile)'!='' and '$(WindowsAppContainer)'=='true' and '$(UseCrtSDKReference)' != 'false')的计算结果为('Lx_cameraS10.cpp;main.cpp'!='' and 'false'=='true' and '' != 'false')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“BeforeResolveReferences”(目标“ResolveReferences”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“BeforeResolveReferences”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“IgnoreJavaScriptOutputAssembly”(目标“AssignProjectConfiguration”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“IgnoreJavaScriptOutputAssembly”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“AssignProjectConfiguration”(目标“ResolveReferences”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“AssignProjectConfiguration”任务。
       任务“AssignProjectConfiguration”
       已完成执行任务“AssignProjectConfiguration”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“AssignProjectConfiguration”的操作。
       已跳过目标“AssignProjectConfiguration”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“_SplitProjectReferencesByFileExistence”(目标“PrepareProjectReferences”依赖于它):
       由于 false 条件，已跳过任务“ResolveNonMSBuildProjectOutput”；('$(BuildingInsideVisualStudio)'=='true' and '@(ProjectReferenceWithConfiguration)'!='')计算为('true'=='true' and ''!='')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_SplitProjectReferencesByFileExistence”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“_AddOutputPathToGlobalPropertiesToRemove”(目标“_GetProjectReferenceTargetFrameworkProperties”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_AddOutputPathToGlobalPropertiesToRemove”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“_GetProjectReferenceTargetFrameworkProperties”(目标“PrepareProjectReferences”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“MSBuild”任务。
       任务“MSBuild”
       已完成执行任务“MSBuild”的操作。
       由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.SkipGetTargetFrameworkProperties)' != 'true' and '$(EnableDynamicPlatformResolution)' == 'true')计算为('' != 'true' and '' == 'true')。
       由于 false 条件，已跳过任务“GetReferenceNearestTargetFrameworkTask”；('@(_ProjectReferenceTargetFrameworkPossibilities)' != '' and '$(ReferringTargetFrameworkForProjectReferences)' != ''
                                                               And '$(GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter)' == 'true' and '%(_ProjectReferenceTargetFrameworkPossibilities.IsVcxOrNativeProj)' != 'true')计算为('' != '' and '' != ''
                                                               And 'true' == 'true' and '' != 'true')。
       由于 false 条件，已跳过任务“GetReferenceNearestTargetFrameworkTask”；('@(_ProjectReferenceTargetFrameworkPossibilities)' != '' and '$(ReferringTargetFrameworkForProjectReferences)' != ''
                                                               And '$(GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter)' != 'true' and '%(_ProjectReferenceTargetFrameworkPossibilities.IsVcxOrNativeProj)' != 'true')计算为('' != '' and '' != ''
                                                               And 'true' != 'true' and '' != 'true')。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“SetRidAgnosticValueForProjects”任务。
       任务“SetRidAgnosticValueForProjects”
       已完成执行任务“SetRidAgnosticValueForProjects”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_GetProjectReferenceTargetFrameworkProperties”的操作。
       由于条件的计算结果为 false，已跳过目标“_GetProjectReferencePlatformProperties”；('$(EnableDynamicPlatformResolution)' == 'true'
                            and '@(_MSBuildProjectReferenceExistent)' != '')的计算结果为('' == 'true'
                            and '' != '')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“PrepareProjectReferences”(目标“ResolveProjectReferences”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“PrepareProjectReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“_RemoveNameMetadataFromProjectReferenceItems”；('@(ProjectReference)'!='')的计算结果为(''!='')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveProjectReferences”(目标“ResolveReferences”依赖于它):
       由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and ('$(BuildingInsideVisualStudio)' == 'true' or '$(BuildProjectReferences)' != 'true') and '$(VisualStudioVersion)' != '10.0' and '@(_MSBuildProjectReferenceExistent)' != '')计算为('' == 'true' and '' != '' and ('true' == 'true' or 'true' != 'true') and '17.0' != '10.0' and '' != '')。
       由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '$(BuildingInsideVisualStudio)' != 'true' and '$(BuildProjectReferences)' == 'true' and '@(_MSBuildProjectReferenceExistent)' != '')计算为('' == 'true' and '' != '' and 'true' != 'true' and 'true' == 'true' and '' != '')。
       由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '$(BuildingProject)' == 'true' and '@(_MSBuildProjectReferenceExistent)' != '')计算为('' == 'true' and '' != '' and 'true' == 'true' and '' != '')。
       由于 false 条件，已跳过任务“Warning”；('@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceNonexistent)' != '')计算为('' != '' and '' != '')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ResolveProjectReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“FindInvalidProjectReferences”；('$(FindInvalidProjectReferences)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“ResolveNativeReferences”；('@(NativeReference)'!='')的计算结果为(''!='')。
       已跳过目标“_PrepareForReferenceResolution”。以前的生成已成功。
       已跳过目标“ResolveProjectReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“FindInvalidProjectReferences”；('$(FindInvalidProjectReferences)' == 'true')的计算结果为('' == 'true')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“GetFrameworkPaths”(目标“ResolveAssemblyReferences”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“GetFrameworkPaths”的操作。
       已跳过目标“_PrepareForReferenceResolution”。以前的生成已成功。
       已跳过目标“GetFrameworkPaths”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“GetReferenceAssemblyPaths”(目标“ResolveAssemblyReferences”依赖于它):
       由于 false 条件，已跳过任务“GetReferenceAssemblyPaths”；('$(TargetFrameworkMoniker)' != '' and ('$(_TargetFrameworkDirectories)' == '' or '$(_FullFrameworkReferenceAssemblyPaths)' == ''))计算为('' != '' and ('' == '' or '' == ''))。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“GetReferenceAssemblyPaths”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Current.targets”中的目标“AddExternalIncludDirectoriesToPaths”(目标“SetBuildDefaultEnvironmentVariables”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“AddExternalIncludDirectoriesToPaths”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.Current.targets”中的目标“SetBuildDefaultEnvironmentVariables”(目标“PrepareForBuild”依赖于它):
       任务“SetEnv”
         PATH=E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64;E:\Windows Kits\10\bin\10.0.19041.0\x64;;C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\x64;E:\Windows Kits\10\bin\10.0.19041.0\x86;;C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools;E:\vs\Common7\tools;E:\vs\Common7\ide;C:\Program Files (x86)\HTML Help Workshop;;E:\vs\MSBuild\Current\Bin\amd64;C:\Windows\Microsoft.NET\Framework64\v4.0.30319\;C:\Windows\Microsoft.NET\Framework\v4.0.30319\;E:\vs\MSBuild\Current\Bin;C:\Windows\Microsoft.NET\Framework\v4.0.30319\;;C:\Python312\Scripts\;C:\Python312\;D:\VRM\vma\bin\;E:\app\24583\product\11.2.0\dbhome_2\bin;E:\orc\data\dbhomeXE\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;E;\Vivo互传\EasyShare\x64\;C;\strawberry\c\bin;C:\strawberry\perl\bin;E;\Vivo互传\EasyShare\x64\;%;PENNI2_REDIST64%;\Rational rose\ROSEanzhuang\common;F:\R\R-4.3.3\bin;C:\Strawberry\c\bin;C:\Strawberry\perl\site\bin;E:\Vivo互传\EasyShare\x86\;\;ivo互传\EasyShare\x64\;\;ianrushi\proteus\yagarto-20121222\bin;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\ProgramData\chocolatey\bin;E:\中软国际大四开学课设\node\;D:\cmake\;make-3.29.7-windows-x86_64\bin;E:\opencv-4.9.0-windows\opencv\build\x64\vc16\bin;D:\ifm3D\ifm3d 1.5.3\bin;E:\Lua\5.1;E:\Lua\5.1\clibs;E:\PCL 1.14.1\bin;E:\PCL 1.14.1\3rdParty\VTK\bin;E:\PCL 1.14.1\3rdParty\FLANN\bin;E:\PCL 1.14.1\3rdParty\Qhull\bin;E:\PCL 1.14.1\3rdParty\OpenNI2\Tools;F:\QT\QT\5.13.1\msvc2017_64\bin;C:\Users\24583\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Windows PowerShell;F:\opencv3.0\opencv\build\x86\vc12\bin;C:\Program Files\GitHub CLI\;F:\Git\Git\cmd;C:\Users\24583\.cargo\bin;D:\anaconda;D:\anaconda\Library\mingw-w64\bin;D:\anaconda\Library\usr\bin;D:\anaconda\Library\bin;D:\anaconda\Scripts;C:\Program Files\MySQL\MySQL Shell 8.1\bin\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\24583\AppData\Local\Microsoft\WindowsApps;E:\java\IntelliJ IDEA Community Edition 2022.2\bin;E:\PC\PyCharm Community Edition 2022.2\bin;D:\MySQL\MySQL Server 5.7\bin;C:\Users\24583\AppData\Roaming\npm;D:\cmake\cmake-3.29.7-windows-x86_64\bin;C:\Users\24583\.dotnet\tools;
       已完成执行任务“SetEnv”的操作。
       任务“SetEnv”
         LIB=E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Auxiliary\VS\lib\x64;;E:\Windows Kits\10\lib\10.0.19041.0\ucrt\x64;;;E:\vs\VC\Auxiliary\VS\UnitTest\lib;E:\Windows Kits\10\lib\10.0.19041.0\um\x64;C:\Program Files (x86)\Windows Kits\NETFXSDK\4.8\lib\um\x64;
       已完成执行任务“SetEnv”的操作。
       任务“SetEnv”
         LIBPATH=E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64;;E:\vs\VC\Tools\MSVC\14.41.34120\lib\x64;
       已完成执行任务“SetEnv”的操作。
       任务“SetEnv”
         INCLUDE=E:\vs\VC\Tools\MSVC\14.41.34120\include;;E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\include;;E:\vs\VC\Auxiliary\VS\include;;E:\Windows Kits\10\Include\10.0.19041.0\ucrt;;;E:\vs\VC\Auxiliary\VS\UnitTest\include;E:\Windows Kits\10\Include\10.0.19041.0\um;E:\Windows Kits\10\Include\10.0.19041.0\shared;E:\Windows Kits\10\Include\10.0.19041.0\winrt;E:\Windows Kits\10\Include\10.0.19041.0\cppwinrt;C:\Program Files (x86)\Windows Kits\NETFXSDK\4.8\Include\um;
       已完成执行任务“SetEnv”的操作。
       任务“SetEnv”
         EXTERNAL_INCLUDE=E:\vs\VC\Tools\MSVC\14.41.34120\include;;E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\include;;E:\vs\VC\Auxiliary\VS\include;;E:\Windows Kits\10\Include\10.0.19041.0\ucrt;;;E:\vs\VC\Auxiliary\VS\UnitTest\include;E:\Windows Kits\10\Include\10.0.19041.0\um;E:\Windows Kits\10\Include\10.0.19041.0\shared;E:\Windows Kits\10\Include\10.0.19041.0\winrt;E:\Windows Kits\10\Include\10.0.19041.0\cppwinrt;C:\Program Files (x86)\Windows Kits\NETFXSDK\4.8\Include\um;
       已完成执行任务“SetEnv”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“SetBuildDefaultEnvironmentVariables”的操作。
       由于条件的计算结果为 false，已跳过目标“SetUserMacroEnvironmentVariables”；('@(BuildMacro)' != '' and '$(DesignTimeBuild)' != 'true')的计算结果为('' != '' and '' != 'true')。
       已跳过目标“_PrepareForReferenceResolution”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“GetResolvedWinMD”(目标“PrepareForBuild”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“GetResolvedWinMD”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Cpp.WindowsSDK.targets”中的目标“_CheckWindowsSDKInstalled”(目标“PrepareForBuild”依赖于它):
       由于 false 条件，已跳过任务“VCMessage”；('$(WindowsSDKInstalled)' != 'true')计算为('true' != 'true')。
       由于 false 条件，已跳过任务“VCMessage”；('$(WindowsAppContainer)' != 'true' and '$(WindowsSDK_Desktop_Support)' != true)计算为('false' != 'true' and 'true' != true)。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_CheckWindowsSDKInstalled”的操作。
       已跳过目标“GetFrameworkPaths”。以前的生成已成功。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“AssignLinkMetadata”；( '$(SynthesizeLinkMetadata)' == 'true' )的计算结果为( '' == 'true' )。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VisualStudio\v17.0\CodeAnalysis\Microsoft.CodeAnalysis.targets”中的目标“SetCABuildNativeEnvironmentVariables”(目标“PrepareForBuild”依赖于它):
       任务“SetEnv”
         CAExcludePath=E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\include;E:\vs\VC\Tools\MSVC\14.41.34120\include;E:\Windows Kits\10\Include\10.0.19041.0\ucrt;;E:\Windows Kits\10\Include\10.0.19041.0\um;E:\Windows Kits\10\Include\10.0.19041.0\shared;E:\Windows Kits\10\Include\10.0.19041.0\winrt;E:\Windows Kits\10\Include\10.0.19041.0\cppwinrt;C:\Program Files (x86)\Windows Kits\NETFXSDK\4.8\Include\um;;
       已完成执行任务“SetEnv”的操作。
       由于 false 条件，已跳过任务“SetEnv”；('$(RunMsvcAnalysis)'=='true' and '$(VCCodeAnalysisUX)'=='true')计算为('false'=='true' and 'true'=='true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“SetCABuildNativeEnvironmentVariables”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“PrepareForBuild”(目标“ResolveAssemblyReferences”依赖于它):
       由于 false 条件，已跳过任务“VCMessage”；('$(DesignTimeBuild)' != 'true' and '$(ConfigurationPlatformExists)' != 'true')计算为('' != 'true' and 'true' != 'true')。
       由于 false 条件，已跳过任务“VCMessage”；('$(ApplicationType)' == '' and '$(DesignTimeBuild)' != 'true' and '$(_ToolsetFound)' != 'true')计算为('' == '' and '' != 'true' and 'true' != 'true')。
       由于 false 条件，已跳过任务“VCMessage”；('$(ApplicationType)' != '' and '$(DesignTimeBuild)' != 'true' and '$(_ToolsetFound)' != 'true')计算为('' != '' and '' != 'true' and 'true' != 'true')。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“MakeDir”任务。
       任务“MakeDir”
       已完成执行任务“MakeDir”的操作。
       由于 false 条件，已跳过任务“VCMessage”；('$(DesignTimeBuild)'!='true' and '$(WindowsAppContainer)'=='true' and '$(ConfigurationType)'!='Application' and '$(ConfigurationType)'!='DynamicLibrary' and '$(ConfigurationType)'!='StaticLibrary')计算为(''!='true' and 'false'=='true' and 'Application'!='Application' and 'Application'!='DynamicLibrary' and 'Application'!='StaticLibrary')。
       由于 false 条件，已跳过任务“VCMessage”；('$(DesignTimeBuild)'!='true' and '$(VCToolsInstallDir)'=='' and '$(UseEnv)' != 'true' and ('$(TargetFrameworkVersion)'=='v3.5' or '$(TargetFrameworkVersion)'=='v3.0' or '$(TargetFrameworkVersion)'=='v2.0' ))计算为(''!='true' and 'E:\vs\VC\Tools\MSVC\14.41.34120\'=='' and '' != 'true' and (''=='v3.5' or ''=='v3.0' or ''=='v2.0' ))。
       由于 false 条件，已跳过任务“VCMessage”；('$(DesignTimeBuild)'!='true' and '$(VCToolsInstallDir)'=='' and '$(UseEnv)' != 'true' and '$(PlatformToolset)'=='v90')计算为(''!='true' and 'E:\vs\VC\Tools\MSVC\14.41.34120\'=='' and '' != 'true' and 'v143'=='v90')。
       正在使用程序集“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Build.CppTasks.Common.dll”中的“CheckVCToolsetVersion”任务。
       任务“CheckVCToolsetVersion”
       已完成执行任务“CheckVCToolsetVersion”的操作。
       由于 false 条件，已跳过任务“VCMessage”；('$(CheckMFCInstalled)' == 'true' and !Exists($(MFC_KeyFile)) and '$(SpectreLibs)' == '')计算为('' == 'true' and !Exists(E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64\mfcs140.lib) and '' == '')。
       由于 false 条件，已跳过任务“VCMessage”；('$(CheckMFCInstalled)' == 'true' and !Exists($(MFC_KeyFile)) and '$(SpectreLibs)' != '')计算为('' == 'true' and !Exists(E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64\mfcs140.lib) and '' != '')。
       由于 false 条件，已跳过任务“VCMessage”；('$(CheckATLInstalled)' == 'true' and !Exists($(ATL_KeyFile)) and '$(SpectreLibs)' == '')计算为('' == 'true' and !Exists(E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64\atls.lib) and '' == '')。
       由于 false 条件，已跳过任务“VCMessage”；('$(CheckATLInstalled)' == 'true' and !Exists($(ATL_KeyFile)) and '$(SpectreLibs)' != '')计算为('' == 'true' and !Exists(E:\vs\VC\Tools\MSVC\14.41.34120\atlmfc\lib\x64\atls.lib) and '' != '')。
       由于 false 条件，已跳过任务“VCMessage”；('$(DesignTimeBuild)' != 'true' and
                                                               '$(CheckMSVCComponents)'=='true' and
                                                               '$(SpectreMitigation)' != '' and
                                                               '$(SpectreMitigation)' != 'false' and
                                                               (('$(VC_Target_Library_Platform)' == 'OneCore' and !Exists('$(VC_LibraryPath_VC_OneCore_CurrentPlatform_spectre)')) or
                                                                ('$(VC_Target_Library_Platform)' == 'Desktop' and !Exists('$(VC_LibraryPath_VC_Desktop_CurrentPlatform_spectre)'))))计算为('' != 'true' and
                                                               'true'=='true' and
                                                               'false' != '' and
                                                               'false' != 'false' and
                                                               (('Desktop' == 'OneCore' and !Exists('E:\vs\VC\Tools\MSVC\14.41.34120\lib\spectre\onecore\x64')) or
                                                                ('Desktop' == 'Desktop' and !Exists('E:\vs\VC\Tools\MSVC\14.41.34120\lib\spectre\x64'))))。
       由于 false 条件，已跳过任务“VCMessage”；('$(DesignTimeBuild)'!='true' and '$(VCToolsInstallDir)'=='' and '$(UseEnv)' != 'true'  and '$(CheckMSVCComponents)'=='true')计算为(''!='true' and 'E:\vs\VC\Tools\MSVC\14.41.34120\'=='' and '' != 'true'  and 'true'=='true')。
       由于 false 条件，已跳过任务“VCMessage”；('$(DesignTimeBuild)'!='true' and '$(WindowsSDKDir)'=='' and '$(UseEnv)' != 'true')计算为(''!='true' and 'E:\Windows Kits\10\'=='' and '' != 'true')。
       由于 false 条件，已跳过任务“VCMessage”；('$(DesignTimeBuild)'!='true' and '$(IntDirTrailingSlashWarning)'=='true')计算为(''!='true' and ''=='true')。
       由于 false 条件，已跳过任务“VCMessage”；('$(DesignTimeBuild)'!='true' and '$(OutDirTrailingSlashWarning)'=='true')计算为(''!='true' and ''=='true')。
       由于 false 条件，已跳过任务“VCMessage”；('%(CompatibilityIssues.Identity)' != '' and '$(DesignTimeBuild)'!='true')计算为('' != '' and ''!='true')。
       由于 false 条件，已跳过任务“VCMessage”；('$(IgnoreWarnIntDirSharingDetected)' != 'true' and '$(IntDirSharingDetected)' == 'true')计算为('' != 'true' and '' == 'true')。
       值为“C:\Users\24583\AppData\Local\Temp”的属性“TMP”从环境中展开。
       值为“C:\Users\24583\AppData\Local\Temp”的属性“TEMP”从环境中展开。
       由于 false 条件，已跳过任务“VCMessage”；('$(DesignTimeBuild)'!='true' and '$(IgnoreWarnIntDirInTempDetected)' != 'true' and ('$(IntDirFullPath.StartsWith($(_Tmp), true, null))' == 'true' or '$(IntDirFullPath.StartsWith($(_Temp), true, null))' == 'true' or '$(OutDirFullPath.StartsWith($(_Tmp), true, null))' == 'true' or '$(OutDirFullPath.StartsWith($(_Temp), true, null))' == 'true'))计算为(''!='true' and '' != 'true' and ('False' == 'true' or 'False' == 'true' or 'False' == 'true' or 'False' == 'true'))。
       正在使用程序集“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Build.CppTasks.Common.dll”中的“VCMessage”任务。
       任务“VCMessage”
         已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
       已完成执行任务“VCMessage”的操作。
       任务“MakeDir”
       已完成执行任务“MakeDir”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“PrepareForBuild”的操作。
       已跳过目标“_PrepareForReferenceResolution”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“ComputeCrtSDKReference”；('@(ClCompile)'!='' and '$(WindowsAppContainer)'=='true' and '$(UseCrtSDKReference)' != 'false')的计算结果为('Lx_cameraS10.cpp;main.cpp'!='' and 'false'=='true' and '' != 'false')。
       由于条件的计算结果为 false，已跳过目标“GetInstalledSDKLocations”；('@(SDKReference)' != '')的计算结果为('' != '')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveSDKReferences”(目标“ResolveAssemblyReferences”依赖于它):
       由于 false 条件，已跳过任务“ResolveSDKReference”；('@(SDKReference)'!='')计算为(''!='')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ResolveSDKReferences”的操作。
       已跳过目标“ResolveSDKReferences”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“ExpandSDKReferences”(目标“ResolveAssemblyReferences”依赖于它):
       由于 false 条件，已跳过任务“GetSDKReferenceFiles”；('@(ResolvedSDKReference)'!='')计算为(''!='')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ExpandSDKReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveNuGetPackageAssets”；('$(ResolveNuGetPackages)' == 'true' and exists('$(ProjectLockFile)'))的计算结果为('true' == 'true' and exists('obj\project.assets.json'))。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveAssemblyReferences”(目标“ResolveReferences”依赖于它):
       由于 false 条件，已跳过任务“ResolveAssemblyReference”；('@(Reference)'!='' or '@(_ResolvedProjectReferencePaths)'!='' or '@(_ExplicitReference)' != '')计算为(''!='' or ''!='' or '' != '')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ResolveAssemblyReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateBindingRedirects”；('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true' and '@(SuggestedBindingRedirects)' != '' and '$(DesignTimeBuild)' != 'true' and '$(BuildingProject)' == 'true')的计算结果为('' == 'true' and 'true' == 'true' and '' != '' and '' != 'true' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“GenerateBindingRedirectsUpdateAppConfig”；('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true')的计算结果为('' == 'true' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“ResolveComReferences”；('@(COMReference)'!='' or '@(COMFileReference)'!='')的计算结果为(''!='' or ''!='')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“AfterResolveReferences”(目标“ResolveReferences”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“AfterResolveReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveTestReferences”；('@(Shadow)'!='')的计算结果为(''!='')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveReferences”(目标“Build”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ResolveReferences”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“InitializeBuildStatus”(目标“Build”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“ReadLinesFromFile”任务。
       任务“ReadLinesFromFile”
       已完成执行任务“ReadLinesFromFile”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“WriteLinesToFile”任务。
       任务“WriteLinesToFile”
       已完成执行任务“WriteLinesToFile”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Touch”任务。
       任务“Touch”
         正在创建“x64\Release\Lx_cameraS10.tlog\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
         正在对“x64\Release\Lx_cameraS10.tlog\unsuccessfulbuild”执行 Touch 任务。
       已完成执行任务“Touch”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“InitializeBuildStatus”的操作。
       已跳过目标“PrepareProjectReferences”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“BuildGenerateSourcesTraverse”(目标“BuildGenerateSources”依赖于它):
       由于 false 条件，已跳过任务“MSBuild”；('$(BuildPassReferences)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceExistent)' != '' and '%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true')计算为('' == 'true' and '' != '' and '' != '' and '' == 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“BuildGenerateSourcesTraverse”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       已跳过目标“ResolveReferences”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.BuildSteps.Targets”中的目标“BeforeBuildGenerateSources”(目标“_BuildGenerateSourcesAction”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“BeforeBuildGenerateSources”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“PreBuildEvent”(目标“_BuildGenerateSourcesAction”依赖于它):
       由于 false 条件，已跳过任务“Message”；('%(PreBuildEvent.Message)' != '' and '%(PreBuildEvent.Command)' != '')计算为('' != '' and '' != '')。
       由于 false 条件，已跳过任务“Exec”；('%(PreBuildEvent.Command)' != '')计算为('' != '')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“PreBuildEvent”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       已跳过目标“InitializeBuildStatus”。以前的生成已成功。
       已跳过目标“SetBuildDefaultEnvironmentVariables”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“SetUserMacroEnvironmentVariables”；('@(BuildMacro)' != '' and '$(DesignTimeBuild)' != 'true')的计算结果为('' != '' and '' != 'true')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“_SelectedFiles”(目标“SelectCustomBuild”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_SelectedFiles”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“SelectCustomBuild”(目标“CustomBuild”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“SelectCustomBuild”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ComputeCustomBuildOutput”(目标“CustomBuild”依赖于它):
       由于 false 条件，已跳过任务“CreateItem”；('%(CustomBuildOutputs.OutputItemType)'!='')计算为(''!='')。
       任务“MakeDir”
       已完成执行任务“MakeDir”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ComputeCustomBuildOutput”的操作。
       由于条件的计算结果为 false，已跳过目标“QtMsBuildNotFound”；(!Exists('$(QtMsBuild)\qt.targets') or !Exists('$(QtMsBuild)\qt.props'))的计算结果为(!Exists('C:\Users\24583\AppData\Local\QtMsBuild\qt.targets') or !Exists('C:\Users\24583\AppData\Local\QtMsBuild\qt.props'))。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“CustomBuild”(目标“_BuildGenerateSourcesAction”依赖于它):
       正在使用程序集“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Build.CppTasks.Common.dll”中的“GetOutOfDateItems”任务。
       任务“GetOutOfDateItems”
       已完成执行任务“GetOutOfDateItems”的操作。
       任务“GetOutOfDateItems”
       已完成执行任务“GetOutOfDateItems”的操作。
       由于 false 条件，已跳过任务“ParallelCustomBuild”；('@(_ParallelCustomBuild)' != '')计算为('' != '')。
       由于 false 条件，已跳过任务“CustomBuild”；('@(_CustomBuild)' != '')计算为('' != '')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“CustomBuild”的操作。
       由于条件的计算结果为 false，已跳过目标“FxExport”；('@(FxCompile)' != '')的计算结果为('' != '')。
       由于条件的计算结果为 false，已跳过目标“FxCompile”；('@(FxCompile)' != '')的计算结果为('' != '')。
       由于条件的计算结果为 false，已跳过目标“_CreateCopyFileItems”；('@(CopyFileToFolders)' != '')的计算结果为('' != '')。
       已跳过目标“_SelectedFiles”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“CopyFileToFolders”(目标“_BuildGenerateSourcesAction”依赖于它):
       任务“GetOutOfDateItems”
       已完成执行任务“GetOutOfDateItems”的操作。
       由于 false 条件，已跳过任务“Copy”；('@(_OutOfDateCopyFile)' != '')计算为('' != '')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“CopyFileToFolders”的操作。
       由于条件的计算结果为 false，已跳过目标“Xsd”；('@(Xsd)' != '')的计算结果为('' != '')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“_Xsd”(目标“_BuildGenerateSourcesAction”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_Xsd”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“MakeDirsForMidl”(目标“_Midl”依赖于它):
       任务“Makedir”
       已完成执行任务“Makedir”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“MakeDirsForMidl”的操作。
       由于条件的计算结果为 false，已跳过目标“Midl”；('@(Midl)' != '')的计算结果为('' != '')。
       由于条件的计算结果为 false，已跳过目标“FxExport”；('@(FxCompile)' != '')的计算结果为('' != '')。
       由于条件的计算结果为 false，已跳过目标“FxCompile”；('@(FxCompile)' != '')的计算结果为('' != '')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ComputeMIDLGeneratedCompileInputs”(目标“_Midl”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ComputeMIDLGeneratedCompileInputs”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“AfterMidl”(目标“_Midl”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“AfterMidl”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“_Midl”(目标“_BuildGenerateSourcesAction”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_Midl”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.BuildSteps.Targets”中的目标“AfterBuildGenerateSources”(目标“_BuildGenerateSourcesAction”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“AfterBuildGenerateSources”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“AfterBuildGenerateSourcesEvent”(目标“_BuildGenerateSourcesAction”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“AfterBuildGenerateSourcesEvent”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“_BuildGenerateSourcesAction”(目标“BuildGenerateSources”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_BuildGenerateSourcesAction”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“BuildGenerateSources”(目标“Build”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“BuildGenerateSources”的操作。
       已跳过目标“PrepareProjectReferences”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“BuildCompileTraverse”(目标“BuildCompile”依赖于它):
       由于 false 条件，已跳过任务“MSBuild”；('$(BuildPassReferences)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceExistent)' != ''  and '%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true')计算为('' == 'true' and '' != '' and '' != ''  and '' == 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“BuildCompileTraverse”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       已跳过目标“ResolveReferences”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“BeforeClCompile”(目标“_ClCompile”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“BeforeClCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateTargetFrameworkMonikerAttribute”；('$(GenerateTargetFrameworkAttribute)' == 'true')的计算结果为('false' == 'true')。
       已跳过目标“ComputeMIDLGeneratedCompileInputs”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ComputeCLInputPDBName”(目标“_ClCompile”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ComputeCLInputPDBName”的操作。
       已跳过目标“ResolveReferences”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“FindReferenceAssembliesForReferences”(目标“ComputeReferenceCLInput”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“FindReferenceAssembliesForReferences”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“GetReferencedVCProjectsInfo”(目标“ComputeReferenceCLInput”依赖于它):
       由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.Extension)' == '.vcxproj' and '@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceExistent)' != '')计算为('' == '.vcxproj' and '' != '' and '' != '')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“GetReferencedVCProjectsInfo”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ComputeReferenceCLInput”(目标“_ClCompile”依赖于它):
       由于 false 条件，已跳过任务“WriteLinesToFile”；('@(_ReferenceOutputsToCopyLocally)'!='' and '$(DesignTimeBuild)' != 'true' and '$(TrackFileAccess)' == 'true')计算为(''!='' and '' != 'true' and 'true' == 'true')。
       由于 false 条件，已跳过任务“WriteLinesToFile”；('@(_ReferenceOutputsToCopyLocally)'!='' and '$(DesignTimeBuild)' != 'true' and '$(TrackFileAccess)' == 'true')计算为(''!='' and '' != 'true' and 'true' == 'true')。
       由于 false 条件，已跳过任务“Message”；('$(_REFERENCE_DEBUG)'=='true')计算为(''=='true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ComputeReferenceCLInput”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“WarnCompileDuplicatedFilename”(目标“_ClCompile”依赖于它):
       由于 false 条件，已跳过任务“VCMessage”；('%(ClCompile.ExcludedFromBuild)' != 'true' and '%(Filename)%(Extension)' != '@(ClCompile->'%(Filename)%(Extension)')' and '%(ObjectFileName)' == '@(ClCompile->Metadata(ObjectFileName)->Distinct())')计算为('' != 'true' and 'Lx_cameraS10.cpp' != 'Lx_cameraS10.cpp' and 'x64\Release\' == 'x64\Release\')。
       由于 false 条件，已跳过任务“VCMessage”；('%(ClCompile.ExcludedFromBuild)' != 'true' and '%(Filename)%(Extension)' != '@(ClCompile->'%(Filename)%(Extension)')' and '%(ObjectFileName)' == '@(ClCompile->Metadata(ObjectFileName)->Distinct())')计算为('' != 'true' and 'main.cpp' != 'main.cpp' and 'x64\Release\' == 'x64\Release\')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“WarnCompileDuplicatedFilename”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“ComputeStdModulesCompileInputs”(目标“_ClCompile”依赖于它):
       由于 false 条件，已跳过任务“GetLibraryModuleSources”；('@(LibraryManifests)' != '')计算为('' != '')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ComputeStdModulesCompileInputs”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qt_build.targets”中的目标“QtGetDefaultClCompile”(目标“QtPrepare”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtGetDefaultClCompile”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qt_globals.targets”中的目标“QtPrepare”(目标“QtVars”依赖于它):
       任务“Message”
          Qt/MSBuild: 3.3.0.13
       已完成执行任务“Message”的操作。
       由于 false 条件，已跳过任务“MakeDir”；(!Exists('$(QtIntDir)'))计算为(!Exists('x64\Release\qt\'))。
       任务“ReadLinesFromFile”
       已完成执行任务“ReadLinesFromFile”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtPrepare”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qt_globals.targets”中的目标“QtHash”(目标“QtVars”依赖于它):
       正在从程序集“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Build.Tasks.Core.dll”初始化任务工厂“CodeTaskFactory”。
       
       正在使用来自任务工厂“Code Task Factory”的“GetItemHash”任务。
       任务“GetItemHash”
       已完成执行任务“GetItemHash”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtHash”的操作。
       已跳过目标“QtHash”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qt_vars.targets”中的目标“QtVarsPrepare”(目标“QtVars”依赖于它):
       任务“MSBuild”
     1>项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”(1)正在节点 2 上生成“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”(1:2) (QtVarsRead 个目标)。
   1:2>项目文件包含 ToolsVersion="17.0"。此工具集未知或缺失(在此情况下，您可以通过安装合适的 MSBuild 版本来解决此问题)，或者生成可能已被强制到特定的 ToolsVersion (出于策略原因)。将项目视为具有 ToolsVersion="Current"。有关详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=293424。
   1:2>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qt_vars.targets”中的目标“QtVarsRead”(入口点):
       任务“ReadLinesFromFile”
       已完成执行任务“ReadLinesFromFile”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“XmlPeek”任务。
       任务“XmlPeek”
         已找到“<Qt_DEFINES_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">_WINDOWS;UNICODE;_UNICODE;WIN32;_ENABLE_EXTENDED_ALIGNED_STORAGE;WIN64;QT_NO_DEBUG;QT_WIDGETS_LIB;QT_GUI_LIB;QT_CORE_LIB;NDEBUG</Qt_DEFINES_>”。
         已找到“<Qt_INCLUDEPATH_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:\QT\QT\5.13.1\msvc2017_64\include;F:\QT\QT\5.13.1\msvc2017_64\include\QtWidgets;F:\QT\QT\5.13.1\msvc2017_64\include\QtGui;F:\QT\QT\5.13.1\msvc2017_64\include\QtANGLE;F:\QT\QT\5.13.1\msvc2017_64\include\QtCore;F:\QT\QT\5.13.1\msvc2017_64\mkspecs\win32-msvc</Qt_INCLUDEPATH_>”。
         已找到“<Qt_STDCPP_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003"></Qt_STDCPP_>”。
         已找到“<Qt_RUNTIME_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">MultiThreadedDLL</Qt_RUNTIME_>”。
         已找到“<Qt_CL_OPTIONS_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">-Zc:rvalueCast -Zc:inline -Zc:strictStrings -Zc:throwingNew -Zc:referenceBinding -Zc:__cplusplus</Qt_CL_OPTIONS_>”。
         已找到“<Qt_LIBS_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:\QT\QT\5.13.1\msvc2017_64\lib\Qt5Widgets.lib;F:\QT\QT\5.13.1\msvc2017_64\lib\Qt5Gui.lib;F:\QT\QT\5.13.1\msvc2017_64\lib\Qt5Core.lib;F:\QT\QT\5.13.1\msvc2017_64\lib\qtmain.lib;shell32.lib</Qt_LIBS_>”。
         已找到“<Qt_LINK_OPTIONS_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">"/MANIFESTDEPENDENCY:type='win32' name='Microsoft.Windows.Common-Controls' version='6.0.0.0' publicKeyToken='6595b64144ccf1df' language='*' processorArchitecture='*'"</Qt_LINK_OPTIONS_>”。
         已找到“<QMake_QT_SYSROOT_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003"></QMake_QT_SYSROOT_>”。
         已找到“<QMake_QT_INSTALL_PREFIX_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/5.13.1/msvc2017_64</QMake_QT_INSTALL_PREFIX_>”。
         已找到“<QMake_QT_INSTALL_ARCHDATA_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/5.13.1/msvc2017_64</QMake_QT_INSTALL_ARCHDATA_>”。
         已找到“<QMake_QT_INSTALL_DATA_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/5.13.1/msvc2017_64</QMake_QT_INSTALL_DATA_>”。
         已找到“<QMake_QT_INSTALL_DOCS_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/Docs/Qt-5.13.1</QMake_QT_INSTALL_DOCS_>”。
         已找到“<QMake_QT_INSTALL_HEADERS_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/5.13.1/msvc2017_64/include</QMake_QT_INSTALL_HEADERS_>”。
         已找到“<QMake_QT_INSTALL_LIBS_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/5.13.1/msvc2017_64/lib</QMake_QT_INSTALL_LIBS_>”。
         已找到“<QMake_QT_INSTALL_LIBEXECS_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/5.13.1/msvc2017_64/bin</QMake_QT_INSTALL_LIBEXECS_>”。
         已找到“<QMake_QT_INSTALL_BINS_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/5.13.1/msvc2017_64/bin</QMake_QT_INSTALL_BINS_>”。
         已找到“<QMake_QT_INSTALL_TESTS_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/5.13.1/msvc2017_64/tests</QMake_QT_INSTALL_TESTS_>”。
         已找到“<QMake_QT_INSTALL_PLUGINS_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/5.13.1/msvc2017_64/plugins</QMake_QT_INSTALL_PLUGINS_>”。
         已找到“<QMake_QT_INSTALL_IMPORTS_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/5.13.1/msvc2017_64/imports</QMake_QT_INSTALL_IMPORTS_>”。
         已找到“<QMake_QT_INSTALL_QML_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/5.13.1/msvc2017_64/qml</QMake_QT_INSTALL_QML_>”。
         已找到“<QMake_QT_INSTALL_TRANSLATIONS_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/5.13.1/msvc2017_64/translations</QMake_QT_INSTALL_TRANSLATIONS_>”。
         已找到“<QMake_QT_INSTALL_CONFIGURATION_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003"></QMake_QT_INSTALL_CONFIGURATION_>”。
         已找到“<QMake_QT_INSTALL_EXAMPLES_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/Examples/Qt-5.13.1</QMake_QT_INSTALL_EXAMPLES_>”。
         已找到“<QMake_QT_INSTALL_DEMOS_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/Examples/Qt-5.13.1</QMake_QT_INSTALL_DEMOS_>”。
         已找到“<QMake_QT_HOST_PREFIX_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/5.13.1/msvc2017_64</QMake_QT_HOST_PREFIX_>”。
         已找到“<QMake_QT_HOST_DATA_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/5.13.1/msvc2017_64</QMake_QT_HOST_DATA_>”。
         已找到“<QMake_QT_HOST_BINS_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/5.13.1/msvc2017_64/bin</QMake_QT_HOST_BINS_>”。
         已找到“<QMake_QT_HOST_LIBS_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">F:/QT/QT/5.13.1/msvc2017_64/lib</QMake_QT_HOST_LIBS_>”。
         已找到“<QMake_QMAKE_SPEC_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">win32-msvc</QMake_QMAKE_SPEC_>”。
         已找到“<QMake_QMAKE_XSPEC_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">win32-msvc</QMake_QMAKE_XSPEC_>”。
         已找到“<QMake_QMAKE_VERSION_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">3.1</QMake_QMAKE_VERSION_>”。
         已找到“<QMake_QT_VERSION_ xmlns="http://schemas.microsoft.com/developer/msbuild/2003">5.13.1</QMake_QT_VERSION_>”。
         已找到“<QtBkup_QtHash xmlns="http://schemas.microsoft.com/developer/msbuild/2003">jZFLbsMwDESvohPEdX9ZZcGQrMpGlgRSShEUhe9/i8qGCwPZRAttpHlDzuhHiGORcju9HcaXwzhPdsXnp/E4v786TMrOV3HfQp6LubPE9RB/SGQ7DVnTF2MZpPC0XkqRFL2mmgcMmKYsgZuKmxDZLOmuMicRQyXOUD57rYBoHQFhg0m0LZBU2JwVwpx7rQJEX8GzFYgESk5ra2LiXn6TBzkr6M1hmFNe0nfXsmfZQNe8HtAt9mXYwVYex/aDuMRf3vp2uHP5H68cGIx//wA=</QtBkup_QtHash>”。
         已找到“<QtVersion xmlns="http://schemas.microsoft.com/developer/msbuild/2003">5.13.1</QtVersion>”。
         已找到“<QtVersionMajor xmlns="http://schemas.microsoft.com/developer/msbuild/2003">5</QtVersionMajor>”。
         已找到“<QtVersionMinor xmlns="http://schemas.microsoft.com/developer/msbuild/2003">13</QtVersionMinor>”。
         已找到“<QtVersionPatch xmlns="http://schemas.microsoft.com/developer/msbuild/2003">1</QtVersionPatch>”。
       已完成执行任务“XmlPeek”的操作。
   1:2>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtVarsRead”的操作。
   1:2>已完成生成项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”(QtVarsRead 个目标)的操作。
     1>已完成执行任务“MSBuild”的操作。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('Qt_DEFINES_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('Qt_INCLUDEPATH_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('Qt_STDCPP_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('Qt_RUNTIME_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('Qt_CL_OPTIONS_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('Qt_LIBS_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('Qt_LINK_OPTIONS_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_SYSROOT_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_INSTALL_PREFIX_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_INSTALL_ARCHDATA_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_INSTALL_DATA_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_INSTALL_DOCS_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_INSTALL_HEADERS_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_INSTALL_LIBS_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_INSTALL_LIBEXECS_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_INSTALL_BINS_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_INSTALL_TESTS_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_INSTALL_PLUGINS_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_INSTALL_IMPORTS_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_INSTALL_QML_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_INSTALL_TRANSLATIONS_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_INSTALL_CONFIGURATION_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_INSTALL_EXAMPLES_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_INSTALL_DEMOS_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_HOST_PREFIX_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_HOST_DATA_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_HOST_BINS_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_HOST_LIBS_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QMAKE_SPEC_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QMAKE_XSPEC_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QMAKE_VERSION_' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QMake_QT_VERSION_' == 'QtBkup_QtHash')。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“CreateProperty”任务。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QtVersion' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QtVersionMajor' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QtVersionMinor' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' == 'QtBkup_QtHash')计算为('QtVersionPatch' == 'QtBkup_QtHash')。
       由于 false 条件，已跳过任务“Delete”；('$(QtHash)' != '$(QtBkup_QtHash)')计算为('jZFLbsMwDESvohPEdX9ZZcGQrMpGlgRSShEUhe9/i8qGCwPZRAttpHlDzuhHiGORcju9HcaXwzhPdsXnp/E4v786TMrOV3HfQp6LubPE9RB/SGQ7DVnTF2MZpPC0XkqRFL2mmgcMmKYsgZuKmxDZLOmuMicRQyXOUD57rYBoHQFhg0m0LZBU2JwVwpx7rQJEX8GzFYgESk5ra2LiXn6TBzkr6M1hmFNe0nfXsmfZQNe8HtAt9mXYwVYex/aDuMRf3vp2uHP5H68cGIx//wA=' != 'jZFLbsMwDESvohPEdX9ZZcGQrMpGlgRSShEUhe9/i8qGCwPZRAttpHlDzuhHiGORcju9HcaXwzhPdsXnp/E4v786TMrOV3HfQp6LubPE9RB/SGQ7DVnTF2MZpPC0XkqRFL2mmgcMmKYsgZuKmxDZLOmuMicRQyXOUD57rYBoHQFhg0m0LZBU2JwVwpx7rQJEX8GzFYgESk5ra2LiXn6TBzkr6M1hmFNe0nfXsmfZQNe8HtAt9mXYwVYex/aDuMRf3vp2uHP5H68cGIx//wA=')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtVarsPrepare”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.targets”中的目标“QtMocInit”(目标“QtVars”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtMocInit”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\uic\qtuic.targets”中的目标“QtUicInit”(目标“QtVars”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtUicInit”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qml\qtqml_static.targets”中的目标“QtQmlStaticGatherQmlPaths”(目标“QtQmlStaticGenerateImportFile”依赖于它):
       正在从程序集“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Build.Tasks.Core.dll”初始化任务工厂“CodeTaskFactory”。
       
       正在使用来自任务工厂“Code Task Factory”的“ListQrc”任务。
       任务“ListQrc”
       已完成执行任务“ListQrc”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtQmlStaticGatherQmlPaths”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qml\qtqml_static.targets”中的目标“QtQmlStaticGenerateImportFile”(目标“QtVars”依赖于它):
       正在跳过目标“QtQmlStaticGenerateImportFile”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:Lx_cameraS10.qrc
       输出文件:E:\Lx_cameraS10\Lx_cameraS10\x64\Release\qt\qmake\import.qml
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtQmlStaticGenerateImportFile”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveHost”；('$(ApplicationType)' == 'Linux' AND '$(PlatformToolset)' != 'WSL_1_0')的计算结果为('' == 'Linux' AND 'v143' != 'WSL_1_0')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qt_vars.targets”中的目标“QtVars”(目标“QtVarsLoad”依赖于它):
       正在跳过目标“QtVars”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:
           Lx_cameraS10.vcxproj
           E:\Lx_cameraS10\Lx_cameraS10\x64\Release\qt\qmake\import.qml
       输出文件:E:\Lx_cameraS10\Lx_cameraS10\x64\Release\qt\\qtvars.xml
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtVars”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qt_vars.targets”中的目标“QtVarsLoad”(目标“QtWork”依赖于它):
       任务“MSBuild”
     1>项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”(1)正在节点 2 上生成“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”(1:3) (QtVarsRead 个目标)。
   1:3>已跳过目标“QtVarsRead”。以前的生成已成功。
   1:3>已完成生成项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”(QtVarsRead 个目标)的操作。
     1>已完成执行任务“MSBuild”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       由于 false 条件，已跳过任务“CreateProperty”；('%(QtVar.Identity)' != 'QtBkup_QtHash')计算为('QtBkup_QtHash' != 'QtBkup_QtHash')。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       任务“Message”
          Qt: 5.13.1
       已完成执行任务“Message”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtVarsLoad”的操作。
       已跳过目标“QtVarsLoad”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“QtTranslationSelect”；('@(QtTranslation)' != '')的计算结果为('' != '')。
       由于条件的计算结果为 false，已跳过目标“QtTranslationUpdate”；('@(QtTranslationUpdate)' != '')的计算结果为('' != '')。
       由于条件的计算结果为 false，已跳过目标“QtTranslationRelease”；('@(QtTranslationRelease)' != '')的计算结果为('' != '')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\translation\qttranslation.targets”中的目标“QtTranslation”(目标“QtWorkPrepare”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtTranslation”的操作。
       已跳过目标“QtVarsLoad”。以前的生成已成功。
       已跳过目标“QtUicInit”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\uic\qtuic.targets”中的目标“QtUicPrepare”(目标“QtUic”依赖于它):
       正在完全生成目标“QtUicPrepare”。
       输出文件“@(QtUic->'####### Don't skip this target #######')”不存在。
       由于 false 条件，已跳过任务“Message”；('$(QtDebug)' == 'true')计算为('' == 'true')。
       由于 false 条件，已跳过任务“Delete”；('$(SelectedFiles)' != '' AND '$(is_selected)' == 'true')计算为('' != '' AND 'false' == 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtUicPrepare”的操作。
       已跳过目标“QtUicPrepare”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\uic\qtuic.targets”中的目标“QtUicSetModified”(目标“QtUic”依赖于它):
       正在跳过目标“QtUicSetModified”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.ui
       输出文件:x64\Release\qt\uic\ui_Lx_cameraS10.h
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtUicSetModified”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\uic\qtuic.targets”中的目标“QtUic”(目标“QtWorkPrepare”依赖于它):
       正在跳过目标“QtUic”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:
           E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.ui
           Lx_cameraS10.vcxproj
       输出文件:x64\Release\qt\uic\ui_Lx_cameraS10.h
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtUic”的操作。
       由于条件的计算结果为 false，已跳过目标“QtRepc”；('@(QtRepc)' != '')的计算结果为('' != '')。
       已跳过目标“QtVarsLoad”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets”中的目标“QtRccInit”(目标“QtRccSetDependencies”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtRccInit”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets”中的目标“QtRccSetDependencies”(目标“QtRccPrepare”依赖于它):
       正在完全生成目标“QtRccSetDependencies”。
       输出文件“@(QtRcc->'####### Don't skip this target #######')”不存在。
       任务“ListQrc”
       已完成执行任务“ListQrc”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtRccSetDependencies”的操作。
       已跳过目标“QtRccSetDependencies”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qml\qtqml_cache.targets”中的目标“QtQmlCachePrepare”(目标“QtRccPrepare”依赖于它):
       正在完全生成目标“QtQmlCachePrepare”。
       输出文件“@(QtRcc->'####### Don't skip this target #######')”不存在。
       由于 false 条件，已跳过任务“Message”；('$(QtDebug)' == 'true')计算为('' == 'true')。
       由于 false 条件，已跳过任务“Expand”；('@(res_qml_js)' != '')计算为('' != '')。
       由于 false 条件，已跳过任务“Delete”；('$(SelectedFiles)' != '' AND '$(is_selected)' == 'true')计算为('' != '' AND 'true' == 'true')。
       由于 false 条件，已跳过任务“Delete”；('$(SelectedFiles)' != '' AND '$(is_selected)' == 'true')计算为('' != '' AND 'true' == 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtQmlCachePrepare”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets”中的目标“QtRccPrepare”(目标“QtRcc”依赖于它):
       正在完全生成目标“QtRccPrepare”。
       输出文件“@(QtRcc->'####### Don't skip this target #######')”不存在。
       由于 false 条件，已跳过任务“Message”；('$(QtDebug)' == 'true')计算为('' == 'true')。
       由于 false 条件，已跳过任务“Delete”；('$(SelectedFiles)' != '' AND '$(is_selected)' == 'true')计算为('' != '' AND 'false' == 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtRccPrepare”的操作。
       已跳过目标“QtRccPrepare”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets”中的目标“QtRccSetModified”(目标“QtRcc”依赖于它):
       正在跳过目标“QtRccSetModified”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.qrc
       输出文件:x64\Release\qt\rcc\qrc_Lx_cameraS10.cpp
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtRccSetModified”的操作。
       已跳过目标“QtRccPrepare”。以前的生成已成功。
       已跳过目标“QtGetDefaultClCompile”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc_cl.targets”中的目标“QtRccOverrideCpp”(目标“QtRcc”依赖于它):
       正在完全生成目标“QtRccOverrideCpp”。
       输出文件“@(QtRcc->'####### Don't skip this target #######')”不存在。
       由于 false 条件，已跳过任务“Message”；('$(QtDebug)' == 'true')计算为('' == 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtRccOverrideCpp”的操作。
       已跳过目标“QtQmlCachePrepare”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qml\qtqml_cache.targets”中的目标“QtRccFilterSetModified”(目标“QtRccFilter”依赖于它):
       正在跳过目标“QtRccFilterSetModified”，因为它没有输出。
       虽然目标已声明其输出，但输出规范仅引用了空属性和/或空项列表。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtRccFilterSetModified”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qml\qtqml_cache.targets”中的目标“QtRccFilter”(目标“QtQmlCacheLoader”依赖于它):
       正在跳过目标“QtRccFilter”，因为它没有输出。
       虽然目标已声明其输出，但输出规范仅引用了空属性和/或空项列表。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtRccFilter”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qml\qtqml_cache.targets”中的目标“QtQmlCacheLoader”(目标“QtQmlCache”依赖于它):
       由于 false 条件，已跳过任务“Message”；('$(QtDebug)' == 'true')计算为('' == 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtQmlCacheLoader”的操作。
       已跳过目标“QtQmlCachePrepare”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qml\qtqml_cache.targets”中的目标“QtQmlSetModified”(目标“QtQmlCacheItem”依赖于它):
       正在跳过目标“QtQmlSetModified”，因为它没有输出。
       虽然目标已声明其输出，但输出规范仅引用了空属性和/或空项列表。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtQmlSetModified”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qml\qtqml_cache.targets”中的目标“QtQmlCacheItem”(目标“QtQmlCache”依赖于它):
       正在跳过目标“QtQmlCacheItem”，因为它没有输出。
       虽然目标已声明其输出，但输出规范仅引用了空属性和/或空项列表。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtQmlCacheItem”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qml\qtqml_cache.targets”中的目标“QtQmlCache”(目标“QtRcc”依赖于它):
       由于 false 条件，已跳过任务“Message”；('$(QtDebug)' == 'true')计算为('' == 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtQmlCache”的操作。
       已跳过目标“QtQmlCache”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets”中的目标“QtRcc”(目标“QtWorkPrepare”依赖于它):
       正在完全生成目标“QtRcc”。
       输入文件“Lx_cameraS10.vcxproj”比输出文件“x64\Release\qt\rcc\qrc_Lx_cameraS10.cpp”新。
       由于 false 条件，已跳过任务“Message”；('$(QtDebug)' == 'true')计算为('' == 'true')。
       任务“CreateProperty”
       已完成执行任务“CreateProperty”的操作。
       正在从程序集“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Build.Tasks.Core.dll”初始化任务工厂“CodeTaskFactory”。
       
       正在使用来自任务工厂“Code Task Factory”的“Flatten”任务。
       任务“Flatten”
       已完成执行任务“Flatten”的操作。
       正在从程序集“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Build.Tasks.Core.dll”初始化任务工厂“CodeTaskFactory”。
       
       正在使用来自任务工厂“Code Task Factory”的“HostTranslatePaths”任务。
       任务“HostTranslatePaths”
       已完成执行任务“HostTranslatePaths”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtRcc”的操作。
       已跳过目标“QtVarsLoad”。以前的生成已成功。
       已跳过目标“QtMocInit”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.targets”中的目标“QtMocPrepare”(目标“QtMoc”依赖于它):
       正在完全生成目标“QtMocPrepare”。
       输出文件“@(QtMoc->'####### Don't skip this target #######')”不存在。
       由于 false 条件，已跳过任务“Message”；('$(QtDebug)' == 'true')计算为('' == 'true')。
       由于 false 条件，已跳过任务“Delete”；('$(SelectedFiles)' != '' AND '$(is_selected)' == 'true')计算为('' != '' AND 'false' == 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtMocPrepare”的操作。
       已跳过目标“QtMocPrepare”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.targets”中的目标“QtMocSetModified”(目标“QtMoc”依赖于它):
       正在跳过目标“QtMocSetModified”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.h
       输出文件:x64\Release\qt\moc\moc_Lx_cameraS10.cpp
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtMocSetModified”的操作。
       已跳过目标“QtMocPrepare”。以前的生成已成功。
       已跳过目标“QtGetDefaultClCompile”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc_cl.targets”中的目标“QtMocOverrideCpp”(目标“QtMoc”依赖于它):
       正在完全生成目标“QtMocOverrideCpp”。
       输出文件“@(QtMoc->'####### Don't skip this target #######')”不存在。
       由于 false 条件，已跳过任务“Message”；('$(QtDebug)' == 'true')计算为('' == 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtMocOverrideCpp”的操作。
       已跳过目标“QtVars”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.targets”中的目标“QtMocUpdateIncludePath”(目标“QtMoc”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtMocUpdateIncludePath”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\moc\qtmoc.targets”中的目标“QtMoc”(目标“QtWorkPrepare”依赖于它):
       正在跳过目标“QtMoc”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:
           E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.h
           Lx_cameraS10.vcxproj
       输出文件:x64\Release\qt\moc\moc_Lx_cameraS10.cpp
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtMoc”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qml\qtqml.targets”中的目标“QtQmlCreateItems”(目标“QtQml”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtQmlCreateItems”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qml\qtqml.targets”中的目标“QtQml”(目标“QtWorkPrepare”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtQml”的操作。
       已跳过目标“QtQmlCache”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“QtQmlStatic”；('$(QtStaticPlugins)' == 'true' AND '@(QtQml)' != '')的计算结果为('' == 'true' AND '' != '')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qt_work.targets”中的目标“QtWorkPrepare”(目标“QtWork”依赖于它):
       正在完全生成目标“QtWorkPrepare”。
       输出文件“####### Do not skip this target #######”不存在。
       由于 false 条件，已跳过任务“Message”；('$(QtDebug)' == 'true' AND '@(QtWork)' != '')计算为('' == 'true' AND 'Lx_cameraS10.ui' != '')。
       任务“GetItemHash”
       已完成执行任务“GetItemHash”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“FindInList”任务。
       任务“FindInList”
         已找到“uic(Lx_cameraS10.ui)”。
       已完成执行任务“FindInList”的操作。
       由于 false 条件，已跳过任务“MakeDir”；('@(QtWork)' != '' AND '$(skip_work)' != 'true')计算为('' != '' AND 'true' != 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtWorkPrepare”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qt_work.targets”中的目标“QtWorkPrepare”(目标“QtWork”依赖于它):
       正在完全生成目标“QtWorkPrepare”。
       输出文件“####### Do not skip this target #######”不存在。
       由于 false 条件，已跳过任务“Message”；('$(QtDebug)' == 'true' AND '@(QtWork)' != '')计算为('' == 'true' AND 'Lx_cameraS10.qrc' != '')。
       任务“GetItemHash”
       已完成执行任务“GetItemHash”的操作。
       任务“FindInList”
         已找到“rcc(Lx_cameraS10.qrc)”。
       已完成执行任务“FindInList”的操作。
       由于 false 条件，已跳过任务“MakeDir”；('@(QtWork)' != '' AND '$(skip_work)' != 'true')计算为('' != '' AND 'true' != 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtWorkPrepare”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qt_work.targets”中的目标“QtWorkPrepare”(目标“QtWork”依赖于它):
       正在完全生成目标“QtWorkPrepare”。
       输出文件“####### Do not skip this target #######”不存在。
       由于 false 条件，已跳过任务“Message”；('$(QtDebug)' == 'true' AND '@(QtWork)' != '')计算为('' == 'true' AND 'Lx_cameraS10.h' != '')。
       任务“GetItemHash”
       已完成执行任务“GetItemHash”的操作。
       任务“FindInList”
         已找到“moc(Lx_cameraS10.h)”。
       已完成执行任务“FindInList”的操作。
       由于 false 条件，已跳过任务“MakeDir”；('@(QtWork)' != '' AND '$(skip_work)' != 'true')计算为('' != '' AND 'true' != 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtWorkPrepare”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qt_work.targets”中的目标“QtWork”(目标“QtAddCompilerSources”依赖于它):
       由于 false 条件，已跳过任务“QtRunWork”；('$(ApplicationType)' != 'Linux' AND '@(QtWork)' != ''
               AND '%(QtWork.ParallelBuild)' == 'true')计算为('' != 'Linux' AND '' != ''
               AND '' == 'true')。
       由于 false 条件，已跳过任务“QtRunWork”；('$(ApplicationType)' != 'Linux' AND '@(QtWork)' != ''
               AND '%(QtWork.ParallelBuild)' != 'true')计算为('' != 'Linux' AND '' != ''
               AND '' != 'true')。
       由于 false 条件，已跳过任务“Flatten”；('$(ApplicationType)' == 'Linux'
               AND '@(QtWork)' != '' AND '$(QtDesignTimeBuild)' != 'true')计算为('' == 'Linux'
               AND '' != '' AND 'false' != 'true')。
       由于 false 条件，已跳过任务“HostTranslatePaths”；('$(ApplicationType)' == 'Linux'
               AND '@(QtWork)' != '' AND '$(QtDesignTimeBuild)' != 'true')计算为('' == 'Linux'
               AND '' != '' AND 'false' != 'true')。
       由于 false 条件，已跳过任务“HostExec”；('$(ApplicationType)' == 'Linux'
               AND '%(Identity)' != '' AND '$(QtDesignTimeBuild)' != 'true')计算为('' == 'Linux'
               AND '' != '' AND 'false' != 'true')。
       由于 false 条件，已跳过任务“WriteLinesToFile”；('@(read_log)' != '')计算为('' != '')。
       由于 false 条件，已跳过任务“WriteLinesToFile”；('@(write_log)' != '')计算为('' != '')。
       任务“WriteLinesToFile”
       已完成执行任务“WriteLinesToFile”的操作。
       任务“WriteLinesToFile”
       已完成执行任务“WriteLinesToFile”的操作。
       任务“WriteLinesToFile”
       已完成执行任务“WriteLinesToFile”的操作。
       任务“WriteLinesToFile”
       已完成执行任务“WriteLinesToFile”的操作。
       由于 false 条件，已跳过任务“Error”；('%(QtWorkResult.ExitCode)' != ''
               AND '%(QtWorkResult.ExitCode)' != '0')计算为('0' != ''
               AND '0' != '0')。
       由于 false 条件，已跳过任务“Error”；('%(QtWorkResult.ExitCode)' != ''
               AND '%(QtWorkResult.ExitCode)' != '0')计算为('0' != ''
               AND '0' != '0')。
       由于 false 条件，已跳过任务“Error”；('%(QtWorkResult.ExitCode)' != ''
               AND '%(QtWorkResult.ExitCode)' != '0')计算为('0' != ''
               AND '0' != '0')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtWork”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qt_build.targets”中的目标“QtAddCompilerSources”(目标“QtUpdateCompilerOptions”依赖于它):
       正在从程序集“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Build.Tasks.Core.dll”初始化任务工厂“CodeTaskFactory”。
       
       正在使用来自任务工厂“Code Task Factory”的“Expand”任务。
       任务“Expand”
       已完成执行任务“Expand”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtAddCompilerSources”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qt_build.targets”中的目标“QtUpdateCompilerOptions”(目标“FixupCLCompileOptions”依赖于它):
       正在从程序集“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Build.Tasks.Core.dll”初始化任务工厂“CodeTaskFactory”。
       
       正在使用来自任务工厂“Code Task Factory”的“QtRunTask”任务。
       任务“QtRunTask”
       已完成执行任务“QtRunTask”的操作。
       任务“Flatten”
       已完成执行任务“Flatten”的操作。
       由于 false 条件，已跳过任务“Message”；('$(QtOptionsBuildLog)' == 'true')计算为('' == 'true')。
       由于 false 条件，已跳过任务“Message”；('$(QtOptionsBuildLog)' == 'true'
                    AND '%(Identity)' != '' AND '%(QtOptions.Conflict)' != 'true')计算为('' == 'true'
                    AND 'Lx_cameraS10.cpp' != '' AND '' != 'true')。
       由于 false 条件，已跳过任务“Message”；('$(QtOptionsBuildLog)' == 'true'
                    AND '%(Identity)' != '' AND '%(QtOptions.Conflict)' != 'true')计算为('' == 'true'
                    AND 'Lx_cameraS10.cpp' != '' AND 'true' != 'true')。
       由于 false 条件，已跳过任务“Message”；('$(QtOptionsBuildLog)' == 'true'
                    AND '%(Identity)' != '' AND '%(QtOptions.Conflict)' != 'true')计算为('' == 'true'
                    AND 'main.cpp' != '' AND '' != 'true')。
       由于 false 条件，已跳过任务“Message”；('$(QtOptionsBuildLog)' == 'true'
                    AND '%(Identity)' != '' AND '%(QtOptions.Conflict)' != 'true')计算为('' == 'true'
                    AND 'main.cpp' != '' AND 'true' != 'true')。
       由于 false 条件，已跳过任务“Message”；('$(QtOptionsBuildLog)' == 'true'
                    AND '%(Identity)' != '' AND '%(QtOptions.Conflict)' != 'true')计算为('' == 'true'
                    AND 'DefaultClCompile' != '' AND '' != 'true')。
       由于 false 条件，已跳过任务“Message”；('$(QtOptionsBuildLog)' == 'true'
                    AND '%(Identity)' != '' AND '%(QtOptions.Conflict)' != 'true')计算为('' == 'true'
                    AND 'DefaultClCompile' != '' AND 'true' != 'true')。
       由于 false 条件，已跳过任务“Message”；('$(QtOptionsBuildLog)' == 'true'
                    AND '%(Identity)' != '' AND '%(QtOptions.Conflict)' != 'true')计算为('' == 'true'
                    AND 'x64\Release\qt\rcc\qrc_Lx_cameraS10.cpp' != '' AND '' != 'true')。
       由于 false 条件，已跳过任务“Message”；('$(QtOptionsBuildLog)' == 'true'
                    AND '%(Identity)' != '' AND '%(QtOptions.Conflict)' != 'true')计算为('' == 'true'
                    AND 'x64\Release\qt\rcc\qrc_Lx_cameraS10.cpp' != '' AND 'true' != 'true')。
       由于 false 条件，已跳过任务“Message”；('$(QtOptionsBuildLog)' == 'true'
                    AND '%(Identity)' != '' AND '%(QtOptions.Conflict)' != 'true')计算为('' == 'true'
                    AND 'x64\Release\qt\moc\moc_Lx_cameraS10.cpp' != '' AND '' != 'true')。
       由于 false 条件，已跳过任务“Message”；('$(QtOptionsBuildLog)' == 'true'
                    AND '%(Identity)' != '' AND '%(QtOptions.Conflict)' != 'true')计算为('' == 'true'
                    AND 'x64\Release\qt\moc\moc_Lx_cameraS10.cpp' != '' AND 'true' != 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtUpdateCompilerOptions”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“FixupCLCompileOptions”(目标“_ClCompile”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“FixupCLCompileOptions”的操作。
       由于条件的计算结果为 false，已跳过目标“SetModuleDependencies”；('$(DesignTimeBuild)' != 'true' and '$(EnableCppModules)' == 'true')的计算结果为('' != 'true' and '' == 'true')。
       已跳过目标“QtAddCompilerSources”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“MakeDirsForCl”(目标“_ClCompile”依赖于它):
       任务“MakeDir”
       已完成执行任务“MakeDir”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“MakeDirsForCl”的操作。
       已跳过目标“_SelectedFiles”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“GenerateTargetFrameworkMonikerAttribute”；('$(GenerateTargetFrameworkAttribute)' == 'true')的计算结果为('false' == 'true')。
       已跳过目标“ComputeMIDLGeneratedCompileInputs”。以前的生成已成功。
       已跳过目标“ComputeCLInputPDBName”。以前的生成已成功。
       已跳过目标“ComputeReferenceCLInput”。以前的生成已成功。
       已跳过目标“WarnCompileDuplicatedFilename”。以前的生成已成功。
       已跳过目标“ComputeStdModulesCompileInputs”。以前的生成已成功。
       已跳过目标“FixupCLCompileOptions”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“SetModuleDependencies”；('$(DesignTimeBuild)' != 'true' and '$(EnableCppModules)' == 'true')的计算结果为('' != 'true' and '' == 'true')。
       已跳过目标“QtAddCompilerSources”。以前的生成已成功。
       已跳过目标“SelectCustomBuild”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“SetModuleDependencies”；('$(DesignTimeBuild)' != 'true' and '$(EnableCppModules)' == 'true')的计算结果为('' != 'true' and '' == 'true')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“SelectClCompile”(目标“ClCompile”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“SelectClCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“SelectAnalysisManifest”；('$(RunMsvcAnalysis)'=='true' and '$(SelectedFiles)'!='')的计算结果为('false'=='true' and ''!='')。
       由于条件的计算结果为 false，已跳过目标“QtMsBuildNotFound”；(!Exists('$(QtMsBuild)\qt.targets') or !Exists('$(QtMsBuild)\qt.props'))的计算结果为(!Exists('C:\Users\24583\AppData\Local\QtMsBuild\qt.targets') or !Exists('C:\Users\24583\AppData\Local\QtMsBuild\qt.props'))。
       由于条件的计算结果为 false，已跳过目标“ManagedIncrementalBuildPreProcessDependencyGraph”；('@(ClCompile)' != '' and '$(EnableManagedIncrementalBuild)' == 'True')的计算结果为('Lx_cameraS10.cpp;main.cpp;x64\Release\qt\rcc\qrc_Lx_cameraS10.cpp;...' != '' and 'false' == 'True')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“ClCompile”(目标“_ClCompile”依赖于它):
       由于 false 条件，已跳过任务“Delete”；('%(ClCompile.DebugInformationFormat)' != '' and '%(ClCompile.DebugInformationFormat)' != 'None' and '%(ClCompile.DebugInformationFormat)' != 'OldStyle' and '%(ClCompile.ProgramDataBaseFileName)' != '' and !Exists(%(ClCompile.ProgramDataBaseFileName)))计算为('ProgramDatabase' != '' and 'ProgramDatabase' != 'None' and 'ProgramDatabase' != 'OldStyle' and 'x64\Release\vc143.pdb' != '' and !Exists(x64\Release\vc143.pdb))。
       由于 false 条件，已跳过任务“MultiToolTask”；('%(ClCompile.CompilerIteration)' == 'Modules')计算为('' == 'Modules')。
       由于 false 条件，已跳过任务“MultiToolTask”；('%(ClCompile.CompilerIteration)' == '' and '$(MultiProcCL)' == 'true')计算为('' == '' and 'false' == 'true')。
       由于 false 条件，已跳过任务“CL”；('%(ClCompile.PrecompiledHeader)' == 'Create' and '%(ClCompile.CompilerIteration)' == '' and '$(MultiProcCL)' != 'true')计算为('NotUsing' == 'Create' and '' == '' and 'false' != 'true')。
       由于 false 条件，已跳过任务“CL”；('%(ClCompile.PrecompiledHeader)' == 'Create' and '%(ClCompile.CompilerIteration)' == '' and '$(MultiProcCL)' != 'true')计算为('NotUsing' == 'Create' and '' == '' and 'false' != 'true')。
       由于 false 条件，已跳过任务“CL”；('%(ClCompile.PrecompiledHeader)' == 'Create' and '%(ClCompile.CompilerIteration)' == '' and '$(MultiProcCL)' != 'true')计算为('NotUsing' == 'Create' and '' == '' and 'false' != 'true')。
       正在使用程序集“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Build.CppTasks.Common.dll”中的“CL”任务。
       任务“CL”
         读取跟踪日志:
         	x64\Release\Lx_cameraS10.tlog\CL.read.1.tlog
         E:\LX_CAMERAS10\LX_CAMERAS10\LX_CAMERAS10.CPP|E:\LX_CAMERAS10\LX_CAMERAS10\MAIN.CPP 的输出:
         	E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\LX_CAMERAS10.OBJ
         	E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\MAIN.OBJ
         将编译 Lx_cameraS10.cpp，因为在 2024/11/10 9:28:49 处修改了 E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.cpp。
         E:\LX_CAMERAS10\LX_CAMERAS10\LX_CAMERAS10.CPP 的输出:
         	E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\LX_CAMERAS10.OBJ
         写入跟踪日志:
         	x64\Release\Lx_cameraS10.tlog\CL.write.1.tlog
         传递给工具的环境变量为:
           VS_UNICODE_OUTPUT=1604
           SARIF_OUTPUT_PIPE=2120
         E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\CL.exe /c /Ix64\Release\qt\moc /Ix64\Release\qt\uic /IF:\QT\QT\5.13.1\msvc2017_64\include /IF:\QT\QT\5.13.1\msvc2017_64\include\QtWidgets /IF:\QT\QT\5.13.1\msvc2017_64\include\QtGui /IF:\QT\QT\5.13.1\msvc2017_64\include\QtANGLE /IF:\QT\QT\5.13.1\msvc2017_64\include\QtCore /I"F:\QT\QT\5.13.1\msvc2017_64\mkspecs\win32-msvc" /I"E:\opencv-4.9.0-windows\opencv\build\include" /I"E:\Lanxin-MRDVS-1.3.52.1008\Lanxin-MRDVS\SDK\include" /Zi /nologo /W3 /WX- /diagnostics:column /sdl /MP /O2 /Oi /GL /D _WINDOWS /D UNICODE /D _UNICODE /D WIN32 /D _ENABLE_EXTENDED_ALIGNED_STORAGE /D WIN64 /D QT_NO_DEBUG /D QT_WIDGETS_LIB /D QT_GUI_LIB /D QT_CORE_LIB /D NDEBUG /D _UNICODE /D UNICODE /Gm- /EHsc /MD /GS /Gy /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /permissive- /Fo"x64\Release\\" /Fd"x64\Release\vc143.pdb" /external:W3 /Gd /TP /FC /errorReport:prompt -Zc:rvalueCast -Zc:strictStrings -Zc:throwingNew -Zc:referenceBinding -Zc:__cplusplus /utf-8 Lx_cameraS10.cpp
         跟踪命令:
         E:\vs\MSBuild\Current\Bin\amd64\Tracker.exe /d "C:\Program Files (x86)\MSBuild\15.0\FileTracker\FileTracker32.dll" /i E:\Lx_cameraS10\Lx_cameraS10\x64\Release\Lx_cameraS10.tlog /r E:\LX_CAMERAS10\LX_CAMERAS10\LX_CAMERAS10.CPP /b MSBuildConsole_CancelEventae27682316ac45a1b4acdcd5d0c2d44a  /c E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\CL.exe  /c /Ix64\Release\qt\moc /Ix64\Release\qt\uic /IF:\QT\QT\5.13.1\msvc2017_64\include /IF:\QT\QT\5.13.1\msvc2017_64\include\QtWidgets /IF:\QT\QT\5.13.1\msvc2017_64\include\QtGui /IF:\QT\QT\5.13.1\msvc2017_64\include\QtANGLE /IF:\QT\QT\5.13.1\msvc2017_64\include\QtCore /I"F:\QT\QT\5.13.1\msvc2017_64\mkspecs\win32-msvc" /I"E:\opencv-4.9.0-windows\opencv\build\include" /I"E:\Lanxin-MRDVS-1.3.52.1008\Lanxin-MRDVS\SDK\include" /Zi /nologo /W3 /WX- /diagnostics:column /sdl /MP /O2 /Oi /GL /D _WINDOWS /D UNICODE /D _UNICODE /D WIN32 /D _ENABLE_EXTENDED_ALIGNED_STORAGE /D WIN64 /D QT_NO_DEBUG /D QT_WIDGETS_LIB /D QT_GUI_LIB /D QT_CORE_LIB /D NDEBUG /D _UNICODE /D UNICODE /Gm- /EHsc /MD /GS /Gy /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /permissive- /Fo"x64\Release\\" /Fd"x64\Release\vc143.pdb" /external:W3 /Gd /TP /FC /errorReport:prompt -Zc:rvalueCast -Zc:strictStrings -Zc:throwingNew -Zc:referenceBinding -Zc:__cplusplus /utf-8 Lx_cameraS10.cpp
         Lx_cameraS10.cpp
       已完成执行任务“CL”的操作。
       任务“CL”
         读取跟踪日志:
         	x64\Release\Lx_cameraS10.tlog\CL.read.1.tlog
         E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\QT\RCC\QRC_LX_CAMERAS10.CPP 的输出:
         	E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\QRC_LX_CAMERAS10.OBJ
         所有输出均为最新。
       已完成执行任务“CL”的操作。
       任务“CL”
         使用从以下项生成的缓存输入依赖关系表:
         	E:\Lx_cameraS10\Lx_cameraS10\x64\Release\Lx_cameraS10.tlog\CL.read.1.tlog
         E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\QT\MOC\MOC_LX_CAMERAS10.CPP 的输出:
         	E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\MOC_LX_CAMERAS10.OBJ
         所有输出均为最新。
       已完成执行任务“CL”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ClCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“RunSelectedFileNativeCodeAnalysis”；('$(RunMsvcAnalysis)'=='true' and '$(SelectedFiles)'!='')的计算结果为('false'=='true' and ''!='')。
       由于条件的计算结果为 false，已跳过目标“ManagedIncrementalBuildPostProcessDependencyGraph”；('@(ClCompile)' != '' and '$(EnableManagedIncrementalBuild)' == 'True')的计算结果为('Lx_cameraS10.cpp;main.cpp;x64\Release\qt\rcc\qrc_Lx_cameraS10.cpp;...' != '' and 'false' == 'True')。
       由于条件的计算结果为 false，已跳过目标“NoAnalysisToolEnabledWarning”；('$(RunCppAnalysis)'=='true' AND '$(EnableMicrosoftCodeAnalysis)'=='false' AND '$(EnableClangTidyCodeAnalysis)'=='false')的计算结果为('false'=='true' AND 'true'=='false' AND 'false'=='false')。
       由于条件的计算结果为 false，已跳过目标“RunSelectedFileClangTidy”；('$(RunClangCppAnalysis)'=='true' AND '$(SelectedFiles)'!='')的计算结果为('false'=='true' AND ''!='')。
       由于条件的计算结果为 false，已跳过目标“MicrosoftAnalysisIncompatiableWithClangCl”；('$(RunCppAnalysis)'=='true' AND '$(EnableMicrosoftCodeAnalysis)'=='true' AND '$(UseClangCl)'=='true')的计算结果为('false'=='true' AND 'true'=='true' AND ''=='true')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“AfterClCompile”(目标“_ClCompile”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“AfterClCompile”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“_ClCompile”(目标“_BuildCompileAction”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_ClCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“_ResGen”；('@(EmbeddedResource)'!='')的计算结果为(''!='')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“BeforeResourceCompile”(目标“_ResourceCompile”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“BeforeResourceCompile”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“MakeDirsForResourceCompile”(目标“_ResourceCompile”依赖于它):
       任务“MakeDir”
       已完成执行任务“MakeDir”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“MakeDirsForResourceCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“ResourceCompile”；('@(ResourceCompile)' != '')的计算结果为('' != '')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“AfterResourceCompile”(目标“_ResourceCompile”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“AfterResourceCompile”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“_ResourceCompile”(目标“_BuildCompileAction”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_ResourceCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“_ImpLib”；('$(ImpLibCompiled)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_Lib”；('$(LibCompiled)' == 'true')的计算结果为('' == 'true')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“AfterBuildCompileEvent”(目标“_BuildCompileAction”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“AfterBuildCompileEvent”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“_BuildCompileAction”(目标“BuildCompile”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_BuildCompileAction”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“BuildCompile”(目标“Build”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“BuildCompile”的操作。
       已跳过目标“PrepareProjectReferences”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“BuildLinkTraverse”(目标“BuildLink”依赖于它):
       由于 false 条件，已跳过任务“MSBuild”；('$(BuildPassReferences)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceExistent)' != ''  and '%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true')计算为('' == 'true' and '' != '' and '' != ''  and '' == 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“BuildLinkTraverse”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       已跳过目标“ResolveReferences”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ComputeLegacyManifestEmbedding”(目标“_BuildLinkAction”依赖于它):
       由于 false 条件，已跳过任务“VCMessage”；('$(RevertManifestEmbedding)' == 'true' and '$(_LegacyManifestEmbeddingDebug)' == 'true')计算为('' == 'true' and '' == 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ComputeLegacyManifestEmbedding”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“BeforeLink”(目标“_Link”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“BeforeLink”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ComputeRCOutputs”(目标“ComputeRCGeneratedLinkInputs”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ComputeRCOutputs”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ComputeRCGeneratedLinkInputs”(目标“_Link”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ComputeRCGeneratedLinkInputs”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ComputeManifestGeneratedLinkerInputs”(目标“_Link”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ComputeManifestGeneratedLinkerInputs”的操作。
       已跳过目标“ComputeCustomBuildOutput”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“GenerateTargetFrameworkMonikerAttribute”；('$(GenerateTargetFrameworkAttribute)' == 'true')的计算结果为('false' == 'true')。
       已跳过目标“ComputeMIDLGeneratedCompileInputs”。以前的生成已成功。
       已跳过目标“ComputeCLInputPDBName”。以前的生成已成功。
       已跳过目标“ComputeReferenceCLInput”。以前的生成已成功。
       已跳过目标“WarnCompileDuplicatedFilename”。以前的生成已成功。
       已跳过目标“ComputeStdModulesCompileInputs”。以前的生成已成功。
       已跳过目标“FixupCLCompileOptions”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“SetModuleDependencies”；('$(DesignTimeBuild)' != 'true' and '$(EnableCppModules)' == 'true')的计算结果为('' != 'true' and '' == 'true')。
       已跳过目标“QtAddCompilerSources”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“SetModuleDependencies”；('$(DesignTimeBuild)' != 'true' and '$(EnableCppModules)' == 'true')的计算结果为('' != 'true' and '' == 'true')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ComputeCLOutputs”(目标“ComputeCLGeneratedLinkInputs”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ComputeCLOutputs”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ComputeCLGeneratedLinkInputs”(目标“_Link”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ComputeCLGeneratedLinkInputs”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ComputeLinkInputsFromProject”(目标“_Link”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ComputeLinkInputsFromProject”的操作。
       由于条件的计算结果为 false，已跳过目标“ComputeReferenceLinkInputs”；(@(ProjectReference) != '')的计算结果为( != '')。
       已跳过目标“ComputeCLOutputs”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets”中的目标“QtRccPass2_GetObjs”(目标“QtRccPass2”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtRccPass2_GetObjs”的操作。
       由于条件的计算结果为 false，已跳过目标“QtRccPass2_Exec”；('@(QtRccObj)' != '')的计算结果为('' != '')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets”中的目标“QtRccPass2”(目标“QtRccPass2_Link”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtRccPass2”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\rcc\qtrcc.targets”中的目标“QtRccPass2_Link”(目标“_Link”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtRccPass2_Link”的操作。
       由于条件的计算结果为 false，已跳过目标“QtQmlStaticLink”；('$(QtStaticPlugins)' == 'true' AND '@(QtQml)' != '')的计算结果为('' == 'true' AND '' != '')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ComputeManifestInputsTargets”(目标“_Link”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ComputeManifestInputsTargets”的操作。
       由于条件的计算结果为 false，已跳过目标“ManifestResourceCompile”；('$(EmbedManifestBy)' == 'LINK' and '@(Manifest)' != '')的计算结果为('MT' == 'LINK' and '' != '')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“AssignTargetPaths”(目标“PrepareResourceNames”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“AssignTargetPath”任务。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       由于 false 条件，已跳过任务“AssignTargetPath”；('@(_DeploymentBaseManifestWithTargetPath)'=='' and '%(None.Extension)'=='.manifest')计算为(''=='' and ''=='.manifest')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“AssignTargetPaths”的操作。
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“SplitResourcesByCulture”(目标“PrepareResourceNames”依赖于它):
       由于 false 条件，已跳过任务“Warning”；('@(ResxWithNoCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“Warning”；('@(ResxWithCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“Warning”；('@(NonResxWithCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“Warning”；('@(NonResxWithNoCulture)'!='')计算为(''!='')。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“AssignCulture”任务。
       任务“AssignCulture”
       已完成执行任务“AssignCulture”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“SplitResourcesByCulture”的操作。
       由于条件的计算结果为 false，已跳过目标“CreateManifestResourceNames”；('@(EmbeddedResource)' != '')的计算结果为('' != '')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“CreateCustomManifestResourceNames”(目标“PrepareResourceNames”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“CreateCustomManifestResourceNames”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“PrepareResourceNames”(目标“_Link”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“PrepareResourceNames”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“MakeDirsForLink”(目标“_Link”依赖于它):
       任务“MakeDir”
       已完成执行任务“MakeDir”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“MakeDirsForLink”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“DoLinkOutputFilesMatch”(目标“_Link”依赖于它):
       由于 false 条件，已跳过任务“VCMessage”；('@(_OutputFileFromLink)' == '')计算为('E:\Lx_cameraS10\x64\Release\Lx_cameraS10.exe' == '')。
       由于 false 条件，已跳过任务“VCMessage”；('@(_OutputFileFromLink)' != '' and '%(_OutputFileFromLink.FullPath)' != '$([System.IO.Path]::GetFullPath($(TargetPath)))')计算为('E:\Lx_cameraS10\x64\Release\Lx_cameraS10.exe' != '' and 'E:\Lx_cameraS10\x64\Release\Lx_cameraS10.exe' != 'E:\Lx_cameraS10\x64\Release\Lx_cameraS10.exe')。
       由于 false 条件，已跳过任务“VCMessage”；('@(_OutputFileFromLink)' != '' and '%(_OutputFileFromLink.Extension)' != '' and '%(_OutputFileFromLink.Extension)' != '$(TargetExt)')计算为('E:\Lx_cameraS10\x64\Release\Lx_cameraS10.exe' != '' and '.exe' != '' and '.exe' != '.exe')。
       由于 false 条件，已跳过任务“VCMessage”；('@(_OutputFileFromLink)' != '' and '%(_OutputFileFromLink.Filename)' != '' and '%(_OutputFileFromLink.Filename)' != '$(TargetName)')计算为('E:\Lx_cameraS10\x64\Release\Lx_cameraS10.exe' != '' and 'Lx_cameraS10' != '' and 'Lx_cameraS10' != 'Lx_cameraS10')。
       由于 false 条件，已跳过任务“VCMessage”；('%(Link.MinimumRequiredVersion)' != '' and ('%(Link.Subsystem)' == '' or '%(Link.Subsystem)' == 'NotSet'))计算为('' != '' and ('Console' == '' or 'Console' == 'NotSet'))。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“DoLinkOutputFilesMatch”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“PreLinkEvent”(目标“_Link”依赖于它):
       由于 false 条件，已跳过任务“Message”；('%(PreLinkEvent.Message)' != '' and '%(PreLinkEvent.Command)' != '')计算为('' != '' and '' != '')。
       由于 false 条件，已跳过任务“Exec”；('%(PreLinkEvent.Command)' != '')计算为('' != '')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“PreLinkEvent”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“ComputeLinkSwitches”(目标“Link”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ComputeLinkSwitches”的操作。
       已跳过目标“QtWork”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“QtNatvis”；('$(Configuration)' == 'Debug' AND '$(LinkNatvisFile)' == 'true')的计算结果为('Release' == 'Debug' AND 'true' == 'true')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Users\24583\AppData\Local\QtMsBuild\qt_build.targets”中的目标“QtUpdateLinkOptions”(目标“Link”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“QtUpdateLinkOptions”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“Link”(目标“_Link”依赖于它):
       正在使用程序集“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Build.CppTasks.Common.dll”中的“Link”任务。
       任务“Link”
         写入跟踪日志:
         	x64\Release\Lx_cameraS10.tlog\link.write.1.tlog
         读取跟踪日志:
         	x64\Release\Lx_cameraS10.tlog\link.read.1.tlog
         E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\LX_CAMERAS10.OBJ|E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\MAIN.OBJ|E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\MOC_LX_CAMERAS10.OBJ|E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\QRC_LX_CAMERAS10.OBJ 的输出:
         	E:\LX_CAMERAS10\X64\RELEASE\LX_CAMERAS10.EXE
         E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\LX_CAMERAS10.OBJ|E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\MAIN.OBJ|E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\MOC_LX_CAMERAS10.OBJ|E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\QRC_LX_CAMERAS10.OBJ 的输入:
         	E:\LANXIN-MRDVS-1.3.52.1008\LANXIN-MRDVS\SDK\LIB\WIN_X64\LXCAMERAAPI.LIB
         	E:\OPENCV-4.9.0-WINDOWS\OPENCV\BUILD\X64\VC16\LIB\OPENCV_WORLD490.LIB
         	E:\WINDOWS KITS\10\LIB\10.0.19041.0\UM\X64\KERNEL32.LIB
         	E:\WINDOWS KITS\10\LIB\10.0.19041.0\UM\X64\USER32.LIB
         	E:\WINDOWS KITS\10\LIB\10.0.19041.0\UM\X64\GDI32.LIB
         	E:\WINDOWS KITS\10\LIB\10.0.19041.0\UM\X64\WINSPOOL.LIB
         	E:\WINDOWS KITS\10\LIB\10.0.19041.0\UM\X64\COMDLG32.LIB
         	E:\WINDOWS KITS\10\LIB\10.0.19041.0\UM\X64\ADVAPI32.LIB
         	E:\WINDOWS KITS\10\LIB\10.0.19041.0\UM\X64\SHELL32.LIB
         	E:\WINDOWS KITS\10\LIB\10.0.19041.0\UM\X64\OLE32.LIB
         	E:\WINDOWS KITS\10\LIB\10.0.19041.0\UM\X64\OLEAUT32.LIB
         	E:\WINDOWS KITS\10\LIB\10.0.19041.0\UM\X64\UUID.LIB
         	E:\WINDOWS KITS\10\LIB\10.0.19041.0\UM\X64\ODBC32.LIB
         	E:\WINDOWS KITS\10\LIB\10.0.19041.0\UM\X64\ODBCCP32.LIB
         	F:\QT\QT\5.13.1\MSVC2017_64\LIB\QT5WIDGETS.LIB
         	F:\QT\QT\5.13.1\MSVC2017_64\LIB\QT5GUI.LIB
         	F:\QT\QT\5.13.1\MSVC2017_64\LIB\QT5CORE.LIB
         	F:\QT\QT\5.13.1\MSVC2017_64\LIB\QTMAIN.LIB
         	E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\LX_CAMERAS10.OBJ
         	E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\MAIN.OBJ
         	E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\QRC_LX_CAMERAS10.OBJ
         	E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\MOC_LX_CAMERAS10.OBJ
         	C:\WINDOWS\GLOBALIZATION\SORTING\SORTDEFAULT.NLS
         	E:\VS\VC\TOOLS\MSVC\14.41.34120\BIN\HOSTX64\X64\C2.DLL
         	E:\VS\VC\TOOLS\MSVC\14.41.34120\LIB\X64\MSVCPRT.LIB
         	E:\VS\VC\TOOLS\MSVC\14.41.34120\LIB\X64\MSVCRT.LIB
         	E:\VS\VC\TOOLS\MSVC\14.41.34120\LIB\X64\OLDNAMES.LIB
         	E:\VS\VC\TOOLS\MSVC\14.41.34120\LIB\X64\VCRUNTIME.LIB
         	E:\WINDOWS KITS\10\LIB\10.0.19041.0\UCRT\X64\UCRT.LIB
         	E:\VS\VC\TOOLS\MSVC\14.41.34120\BIN\HOSTX64\X64\2052\LINKUI.DLL
         	E:\VS\VC\TOOLS\MSVC\14.41.34120\BIN\HOSTX64\X64\CVTRES.EXE
         	C:\WINDOWS\SYSTEM32\TZRES.DLL
         	E:\VS\VC\TOOLS\MSVC\14.41.34120\BIN\HOSTX64\X64\2052\CLUI.DLL
         需要编译源: 输入 E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\LX_CAMERAS10.OBJ 比输出 E:\LX_CAMERAS10\X64\RELEASE\LX_CAMERAS10.EXE 新。
         传递给工具的环境变量为:
           VS_UNICODE_OUTPUT=2276
         E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\link.exe /ERRORREPORT:PROMPT /OUT:"E:\Lx_cameraS10\x64\Release\Lx_cameraS10.exe" /NOLOGO /LIBPATH:"E:\opencv-4.9.0-windows\opencv\build\x64\vc16\lib" /LIBPATH:"E:\Lanxin-MRDVS-1.3.52.1008\Lanxin-MRDVS\SDK\lib\win_x64" LxCameraApi.lib opencv_world490.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib F:\QT\QT\5.13.1\msvc2017_64\lib\Qt5Widgets.lib F:\QT\QT\5.13.1\msvc2017_64\lib\Qt5Gui.lib F:\QT\QT\5.13.1\msvc2017_64\lib\Qt5Core.lib F:\QT\QT\5.13.1\msvc2017_64\lib\qtmain.lib shell32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:"E:\Lx_cameraS10\x64\Release\Lx_cameraS10.pdb" /SUBSYSTEM:CONSOLE /OPT:REF /OPT:ICF /LTCG:incremental /LTCGOUT:"x64\Release\Lx_cameraS10.iobj" /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"E:\Lx_cameraS10\x64\Release\Lx_cameraS10.lib" /MACHINE:X64 "/MANIFESTDEPENDENCY:type='win32' name='Microsoft.Windows.Common-Controls' version='6.0.0.0' publicKeyToken='6595b64144ccf1df' language='*' processorArchitecture='*'" x64\Release\Lx_cameraS10.obj
         x64\Release\main.obj
         x64\Release\qrc_Lx_cameraS10.obj
         x64\Release\moc_Lx_cameraS10.obj
         跟踪命令:
         E:\vs\MSBuild\Current\Bin\amd64\Tracker.exe /a /d "C:\Program Files (x86)\MSBuild\15.0\FileTracker\FileTracker32.dll" /i E:\Lx_cameraS10\Lx_cameraS10\x64\Release\Lx_cameraS10.tlog /r "E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\LX_CAMERAS10.OBJ|E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\MAIN.OBJ|E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\MOC_LX_CAMERAS10.OBJ|E:\LX_CAMERAS10\LX_CAMERAS10\X64\RELEASE\QRC_LX_CAMERAS10.OBJ" /b MSBuildConsole_CancelEvent1058fd5e4b0a4fc5938339547ac91ac3  /c E:\vs\VC\Tools\MSVC\14.41.34120\bin\HostX64\x64\link.exe  /ERRORREPORT:PROMPT /OUT:"E:\Lx_cameraS10\x64\Release\Lx_cameraS10.exe" /NOLOGO /LIBPATH:"E:\opencv-4.9.0-windows\opencv\build\x64\vc16\lib" /LIBPATH:"E:\Lanxin-MRDVS-1.3.52.1008\Lanxin-MRDVS\SDK\lib\win_x64" LxCameraApi.lib opencv_world490.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib F:\QT\QT\5.13.1\msvc2017_64\lib\Qt5Widgets.lib F:\QT\QT\5.13.1\msvc2017_64\lib\Qt5Gui.lib F:\QT\QT\5.13.1\msvc2017_64\lib\Qt5Core.lib F:\QT\QT\5.13.1\msvc2017_64\lib\qtmain.lib shell32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:"E:\Lx_cameraS10\x64\Release\Lx_cameraS10.pdb" /SUBSYSTEM:CONSOLE /OPT:REF /OPT:ICF /LTCG:incremental /LTCGOUT:"x64\Release\Lx_cameraS10.iobj" /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"E:\Lx_cameraS10\x64\Release\Lx_cameraS10.lib" /MACHINE:X64 "/MANIFESTDEPENDENCY:type='win32' name='Microsoft.Windows.Common-Controls' version='6.0.0.0' publicKeyToken='6595b64144ccf1df' language='*' processorArchitecture='*'" x64\Release\Lx_cameraS10.obj
         x64\Release\main.obj
         x64\Release\qrc_Lx_cameraS10.obj
         x64\Release\moc_Lx_cameraS10.obj
         正在生成代码
     1>E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.cpp(222): warning C4715: “Lx_cameraS10::SaveImage”: 不是所有的控件路径都返回值
         30 of 411 functions ( 7.3%) were compiled, the rest were copied from previous compilation.
           21 functions were new in current compilation
           11 functions had inline decision re-evaluated but remain unchanged
         已完成代码的生成
       已完成执行任务“Link”的操作。
       任务“Message”
         Lx_cameraS10.vcxproj -> E:\Lx_cameraS10\x64\Release\Lx_cameraS10.exe
       已完成执行任务“Message”的操作。
       由于 false 条件，已跳过任务“VCMessage”；(('$(EmbedManifestBy)' != 'LINK' or '$(LegacyManifestEmbedding)' != 'true' or '$(LinkSkippedExecution)' == 'true') and
                    %(Link.GenerateDebugInformation) == 'DebugFastLink' and %(Link.ProgramDataBaseFileName) != '')计算为(('MT' != 'LINK' or '' != 'true' or 'False' == 'true') and
                    false == 'DebugFastLink' and  != '')。
       由于 false 条件，已跳过任务“VCMessage”；(('$(EmbedManifestBy)' != 'LINK' or '$(LegacyManifestEmbedding)' != 'true' or '$(LinkSkippedExecution)' == 'true') and
                    %(Link.GenerateDebugInformation) == 'true' and %(Link.ProgramDataBaseFileName) != '')计算为(('MT' != 'LINK' or '' != 'true' or 'False' == 'true') and
                    false == 'true' and  != '')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“Link”的操作。
       由于条件的计算结果为 false，已跳过目标“MetaGenInputsOutputs”；('$(EnableManagedIncrementalBuild)' == 'True')的计算结果为('false' == 'True')。
       由于条件的计算结果为 false，已跳过目标“ComputeMetaGenInputs”；('$(CLRSupport)'!='' and '$(CLRSupport)'!='false' and '$(CLRSupport)'!='NetCore')的计算结果为('false'!='' and 'false'!='false' and 'false'!='NetCore')。
       由于条件的计算结果为 false，已跳过目标“MetaGen”；('@(MetaGen)' != '')的计算结果为('' != '')。
       由于条件的计算结果为 false，已跳过目标“QtDeploy”；('$(QtDeploy)' == 'true' AND '$(ApplicationType)' != 'Linux')的计算结果为('false' == 'true' AND '' != 'Linux')。
       由于条件的计算结果为 false，已跳过目标“QtIDCPostBuild”；('$(QtIDC)' == 'true' AND
                            '$(ApplicationType)' != 'Linux' AND
                            '$(ConfigurationType)' == 'DynamicLibrary')的计算结果为('false' == 'true' AND
                            '' != 'Linux' AND
                            'Application' == 'DynamicLibrary')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“AfterLink”(目标“_Link”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“AfterLink”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“_Link”(目标“_BuildLinkAction”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_Link”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“_ALink”(目标“_BuildLinkAction”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_ALink”的操作。
       已跳过目标“ComputeLegacyManifestEmbedding”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“_Manifest”(目标“_BuildLinkAction”依赖于它):
       由于 false 条件，已跳过任务“CallTarget”；('$(LegacyManifestEmbedding)' == 'true')计算为('' == 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_Manifest”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“RegisterOutput”(目标“_BuildLinkAction”依赖于它):
       由于 false 条件，已跳过任务“Exec”；('$(ConfigurationType)'=='DynamicLibrary' and '%(Link.RegisterOutput)'=='true' and '%(Link.PerUserRedirection)'!='true')计算为('Application'=='DynamicLibrary' and 'false'=='true' and 'false'!='true')。
       由于 false 条件，已跳过任务“Exec”；('$(ConfigurationType)'=='DynamicLibrary' and '%(Link.RegisterOutput)'=='true' and '%(Link.PerUserRedirection)'=='true')计算为('Application'=='DynamicLibrary' and 'false'=='true' and 'false'=='true')。
       由于 false 条件，已跳过任务“Exec”；('$(ConfigurationType)'=='Application' and '%(Link.RegisterOutput)'=='true' and '%(Link.PerUserRedirection)'!='true')计算为('Application'=='Application' and 'false'=='true' and 'false'!='true')。
       由于 false 条件，已跳过任务“Exec”；('$(ConfigurationType)'=='Application' and '%(Link.RegisterOutput)'=='true' and '%(Link.PerUserRedirection)'=='true')计算为('Application'=='Application' and 'false'=='true' and 'false'=='true')。
       由于 false 条件，已跳过任务“VCMessage”；('$(_RegisterOutputExitCode)' != '' and '$(_RegisterOutputExitCode)' != '0')计算为('' != '' and '' != '0')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“RegisterOutput”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       已跳过目标“ResolveReferences”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ResolvedXDCMake”(目标“_XdcMake”依赖于它):
       由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.Extension)' == '.vcxproj' and '@(ProjectReferenceWithConfiguration)' != '' and '@(_MSBuildProjectReferenceExistent)' != '' and '$(_ClCompileGenerateXMLDocumentationFiles)' == 'true')计算为('' == '.vcxproj' and '' != '' and '' != '' and '' == 'true')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ResolvedXDCMake”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ComputeCLCompileGeneratedXDCFiles”(目标“_XdcMake”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ComputeCLCompileGeneratedXDCFiles”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“MakeDirsForXdcMake”(目标“_XdcMake”依赖于它):
       任务“MakeDir”
       已完成执行任务“MakeDir”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“MakeDirsForXdcMake”的操作。
       由于条件的计算结果为 false，已跳过目标“XdcMake”；('@(XdcMake)' != '')的计算结果为('' != '')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“_XdcMake”(目标“_BuildLinkAction”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_XdcMake”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ComputeCLCompileGeneratedSbrFiles”(目标“_BscMake”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ComputeCLCompileGeneratedSbrFiles”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“MakeDirsForBscMake”(目标“_BscMake”依赖于它):
       任务“MakeDir”
       已完成执行任务“MakeDir”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“MakeDirsForBscMake”的操作。
       由于条件的计算结果为 false，已跳过目标“BscMake”；('@(BscMake)' != '')的计算结果为('' != '')。
       由于条件的计算结果为 false，已跳过目标“CustomBuildStep”；('@(CustomBuildStep)' != '' and '$(SelectedFiles)'=='')的计算结果为('' != '' and ''=='')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“_BscMake”(目标“_BuildLinkAction”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_BscMake”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“BuiltProjectOutputGroup”(目标“CreateRecipeFile”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“BuiltProjectOutputGroup”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       已跳过目标“PrepareResourceNames”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“SatelliteDllsProjectOutputGroup”(目标“CreateRecipeFile”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“SatelliteDllsProjectOutputGroup”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“MakeDirsForFxc”(目标“ContentFilesProjectOutputGroup”依赖于它):
       任务“MakeDir”
       已完成执行任务“MakeDir”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“MakeDirsForFxc”的操作。
       由于条件的计算结果为 false，已跳过目标“_CreateCopyFileItems”；('@(CopyFileToFolders)' != '')的计算结果为('' != '')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“ContentFilesProjectOutputGroup”(目标“CreateRecipeFile”依赖于它):
       由于 false 条件，已跳过任务“AssignTargetPath”；('@(ContentFilesProjectOutputGroupOutputFullPath)' != '' and '%(ContentFilesProjectOutputGroupOutputFullPath.RootFolder)' != '')计算为('' != '' and '' != '')。
       由于 false 条件，已跳过任务“AssignTargetPath”；('@(ContentFilesProjectOutputGroupOutputFullPath)' != '' and '%(ContentFilesProjectOutputGroupOutputFullPath.RootFolder)' == '')计算为('' != '' and '' == '')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“ContentFilesProjectOutputGroup”的操作。
       已跳过目标“GetReferencedVCProjectsInfo”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“CreateRecipeFile”(目标“_BuildLinkAction”依赖于它):
       正在使用程序集“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Build.CppTasks.Common.dll”中的“GenerateDesktopDeployRecipe”任务。
       任务“GenerateDesktopDeployRecipe”
       已完成执行任务“GenerateDesktopDeployRecipe”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“CreateRecipeFile”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“_GenerateSatelliteAssemblyInputs”(目标“CreateSatelliteAssemblies”依赖于它):
       由于 false 条件，已跳过任务“Warning”；('@(ManifestResourceWithCulture)'!='' and '%(ManifestResourceWithCulture.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
       由于 false 条件，已跳过任务“Warning”；('@(ManifestNonResxWithCultureOnDisk)'!='' and '%(ManifestNonResxWithCultureOnDisk.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_GenerateSatelliteAssemblyInputs”的操作。
       由于条件的计算结果为 false，已跳过目标“ComputeIntermediateSatelliteAssemblies”；(@(ReferenceSatellitePaths->'%(DestinationSubDirectory)') != '')的计算结果为( != '')。
       由于条件的计算结果为 false，已跳过目标“GenerateSatelliteAssemblies”；('@(_SatelliteAssemblyResourceInputs)' != '')的计算结果为('' != '')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“CreateSatelliteAssemblies”(目标“_BuildLinkAction”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“CreateSatelliteAssemblies”的操作。
       由于条件的计算结果为 false，已跳过目标“CopyLocalNativeReference”；('$(CopyLocalProjectReference)' == 'true')的计算结果为('false' == 'true')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“_Appverifier”(目标“_BuildLinkAction”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_Appverifier”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“_Deploy”(目标“_BuildLinkAction”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_Deploy”的操作。
       由于条件的计算结果为 false，已跳过目标“ComputeIntermediateSatelliteAssemblies”；(@(ReferenceSatellitePaths->'%(DestinationSubDirectory)') != '')的计算结果为( != '')。
       由于条件的计算结果为 false，已跳过目标“_CopyFilesMarkedCopyLocal”；('@(ReferenceCopyLocalPaths)' != '')的计算结果为('' != '')。
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
       已跳过目标“AssignProjectConfiguration”。以前的生成已成功。
       已跳过目标“_SplitProjectReferencesByFileExistence”。以前的生成已成功。
       已跳过目标“_GetProjectReferenceTargetFrameworkProperties”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”(目标“GetCopyToOutputDirectoryItems”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“C:\Windows\Microsoft.NET\Framework\v4.0.30319\Microsoft.Xaml.targets”中的目标“GetCopyToOutputDirectoryXamlAppDefs”(目标“GetCopyToOutputDirectoryItems”依赖于它):
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“GetCopyToOutputDirectoryXamlAppDefs”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“GetCopyToOutputDirectoryItems”(目标“_CopySourceItemsToOutputDirectory”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“CallTarget”任务。
       任务“CallTarget”
       已跳过目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”。以前的生成已成功。
       已跳过目标“_AddOutputPathToGlobalPropertiesToRemove”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“_GetCopyToOutputDirectoryItemsFromTransitiveProjectReferences”(目标“GetCopyToOutputDirectoryItems”依赖于它):
       由于 false 条件，已跳过任务“MSBuild”；('@(_MSBuildProjectReferenceExistent)' != '' and '$(_GetChildProjectCopyToOutputDirectoryItems)' == 'true' and '%(_MSBuildProjectReferenceExistent.Private)' != 'false' and '$(UseCommonOutputDirectory)' != 'true')计算为('' != '' and 'true' == 'true' and '' != 'false' and 'false' != 'true')。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_GetCopyToOutputDirectoryItemsFromTransitiveProjectReferences”的操作。
       已完成执行任务“CallTarget”的操作。
       任务“CallTarget”
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
       已跳过目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“_GetCopyToOutputDirectoryItemsFromThisProject”(目标“GetCopyToOutputDirectoryItems”依赖于它):
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_GetCopyToOutputDirectoryItemsFromThisProject”的操作。
       已完成执行任务“CallTarget”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“GetCopyToOutputDirectoryItems”的操作。
       由于条件的计算结果为 false，已跳过目标“_CopyOutOfDateSourceItemsToOutputDirectory”；( '@(_SourceItemsToCopyToOutputDirectory)' != '' )的计算结果为( '' != '' )。
       由于条件的计算结果为 false，已跳过目标“_CopyOutOfDateSourceItemsToOutputDirectoryAlways”；( '@(_SourceItemsToCopyToOutputDirectoryAlways)' != '' )的计算结果为( '' != '' )。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“_CopySourceItemsToOutputDirectory”(目标“CopyFilesToOutputDirectory”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_CopySourceItemsToOutputDirectory”的操作。
       由于条件的计算结果为 false，已跳过目标“_CopyAppConfigFile”；( '@(AppConfigWithTargetPath)' != '' )的计算结果为( '' != '' )。
       由于条件的计算结果为 false，已跳过目标“_CopyManifestFiles”；( '$(_DeploymentCopyApplicationManifest)'=='true' or '$(GenerateClickOnceManifests)'=='true' )的计算结果为( ''=='true' or ''=='true' )。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“_CheckForCompileOutputs”(目标“CopyFilesToOutputDirectory”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_CheckForCompileOutputs”的操作。
       由于条件的计算结果为 false，已跳过目标“_SGenCheckForOutputs”；('$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto'))的计算结果为('Auto' == 'On' or (''!='' and 'Auto' == 'Auto'))。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“CopyFilesToOutputDirectory”(目标“PrepareForRun”依赖于它):
       由于 false 条件，已跳过任务“Copy”；('$(CopyBuildOutputToOutputDirectory)' == 'true' and '$(SkipCopyBuildProduct)' != 'true')计算为('true' == 'true' and 'true' != 'true')。
       由于 false 条件，已跳过任务“CopyRefAssembly”；('$(ProduceReferenceAssembly)' == 'true' and '$(CopyBuildOutputToOutputDirectory)' == 'true' and '$(SkipCopyBuildProduct)' != 'true')计算为('false' == 'true' and 'true' == 'true' and 'true' != 'true')。
       由于 false 条件，已跳过任务“Message”；('$(CopyBuildOutputToOutputDirectory)' == 'true' and '$(SkipCopyBuildProduct)'!='true')计算为('true' == 'true' and 'true'!='true')。
       由于 false 条件，已跳过任务“Copy”；('@(AddModules)' != '')计算为('' != '')。
       由于 false 条件，已跳过任务“Copy”；('$(_SGenDllCreated)'=='true')计算为('false'=='true')。
       由于 false 条件，已跳过任务“Copy”；('$(_DebugSymbolsProduced)'=='true' and '$(SkipCopyingSymbolsToOutputDirectory)' != 'true' and '$(CopyOutputSymbolsToOutputDirectory)'=='true')计算为('false'=='true' and '' != 'true' and 'true'=='true')。
       由于 false 条件，已跳过任务“Copy”；('$(_DocumentationFileProduced)'=='true' and '$(CopyDocumentationFileToOutputDirectory)'=='true')计算为('false'=='true' and 'true'=='true')。
       由于 false 条件，已跳过任务“Copy”；('@(IntermediateSatelliteAssembliesWithTargetPath)' != '')计算为('' != '')。
       由于 false 条件，已跳过任务“Copy”；('@(ReferenceComWrappersToCopyLocal)' != '' or '@(ResolvedIsolatedComModules)' != '' or '@(_DeploymentLooseManifestFile)' != '' or '@(NativeReferenceFile)' != '' )计算为('' != '' or '' != '' or '' != '' or '' != '' )。
       由于 false 条件，已跳过任务“Copy”；('$(SkipCopyWinMDArtifact)' != 'true' and '@(WinMDExpArtifacts)' != '')计算为('' != 'true' and '' != '')。
       由于 false 条件，已跳过任务“Message”；('$(SkipCopyWinMDArtifact)' != 'true' and '$(_WindowsMetadataOutputPath)' != '')计算为('' != 'true' and '' != '')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“CopyFilesToOutputDirectory”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“PrepareForRun”(目标“_BuildLinkAction”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“PrepareForRun”的操作。
       由于条件的计算结果为 false，已跳过目标“CustomBuildStep”；('@(CustomBuildStep)' != '' and '$(SelectedFiles)'=='')的计算结果为('' != '' and ''=='')。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets”中的目标“PostBuildEvent”(目标“_BuildLinkAction”依赖于它):
       由于 false 条件，已跳过任务“Message”；('%(PostBuildEvent.Message)' != '' and '%(PostBuildEvent.Command)' != '')计算为('' != '' and '' != '')。
       由于 false 条件，已跳过任务“Exec”；('%(PostBuildEvent.Command)' != '')计算为('' != '')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“PostBuildEvent”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“_BuildLinkAction”(目标“BuildLink”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_BuildLinkAction”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“BuildLink”(目标“Build”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“BuildLink”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.BuildSteps.Targets”中的目标“AfterBuild”(目标“Build”依赖于它):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“AfterBuild”的操作。
       已跳过目标“_CheckForCompileOutputs”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“_SGenCheckForOutputs”；('$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto'))的计算结果为('Auto' == 'On' or (''!='' and 'Auto' == 'Auto'))。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“_CleanGetCurrentAndPriorFileWrites”(目标“IncrementalClean”依赖于它):
       任务“ReadLinesFromFile”
       已完成执行任务“ReadLinesFromFile”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“ConvertToAbsolutePath”任务。
       任务“ConvertToAbsolutePath”
       已完成执行任务“ConvertToAbsolutePath”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“FindUnderPath”任务。
       任务“FindUnderPath”
         比较路径为“E:\Lx_cameraS10\Lx_cameraS10”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“E:\Lx_cameraS10\x64\Release\”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“x64\Release\”。
       已完成执行任务“FindUnderPath”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“RemoveDuplicates”任务。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“_CleanGetCurrentAndPriorFileWrites”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets”中的目标“IncrementalClean”(目标“Build”依赖于它):
       任务“FindUnderPath”
         比较路径为“E:\Lx_cameraS10\x64\Release\”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“x64\Release\”。
       已完成执行任务“FindUnderPath”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Delete”任务。
       任务“Delete”
       已完成执行任务“Delete”的操作。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
       由于 false 条件，已跳过任务“WriteLinesToFile”；('@(_CleanUnfilteredPriorFileWrites)'!='@(_CleanUniqueRemainingFileWritesAfterIncrementalClean)')计算为(''!='')。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“IncrementalClean”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“TlogCleanup”(目标“Build”依赖于它):
       正在使用程序集“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.Build.CppTasks.Common.dll”中的“CleanupStaleTlogItems”任务。
       任务“CleanupStaleTlogItems”
       已完成执行任务“CleanupStaleTlogItems”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“TlogCleanup”的操作。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets”中的目标“FinalizeBuildStatus”(目标“Build”依赖于它):
       任务“Delete”
         正在删除文件“x64\Release\Lx_cameraS10.tlog\unsuccessfulbuild”。
       已完成执行任务“Delete”的操作。
       任务“Touch”
         正在对“x64\Release\Lx_cameraS10.tlog\Lx_cameraS10.lastbuildstate”执行 Touch 任务。
       已完成执行任务“Touch”的操作。
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“FinalizeBuildStatus”的操作。
       已跳过目标“QtTranslation”。以前的生成已成功。
       已跳过目标“_CheckForInvalidConfigurationAndPlatform”。以前的生成已成功。
       已跳过目标“_CheckForInvalidConfigurationAndPlatform”。以前的生成已成功。
     1>来自项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”的文件“E:\vs\MSBuild\Microsoft\VC\v170\Microsoft.BuildSteps.Targets”中的目标“Build”(入口点):
     1>已完成在项目“Lx_cameraS10.vcxproj”中生成目标“Build”的操作。
     1>已完成生成项目“E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”(Build 个目标)的操作。

已成功生成。

       “E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.vcxproj”(Build 目标) (1) ->
       (Link 目标) -> 
         E:\Lx_cameraS10\Lx_cameraS10\Lx_cameraS10.cpp(222): warning C4715: “Lx_cameraS10::SaveImage”: 不是所有的控件路径都返回值

    1 个警告
    0 个错误

已用时间 00:00:03.98
